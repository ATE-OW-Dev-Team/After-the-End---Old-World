namespace = AOS
character_event = { #Clean up event
	id = AOS.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_anti_caliph = yes
		OR = {
			AND = {
				NOT = { religion = sunni }
				has_claim = d_sunni
			}
			AND = {
				NOT = { religion = wahhabi }
				has_claim = d_wahhabi
			}
			AND = {
				NOT = { religion = deobandi }
				has_claim = d_deobandi
			}
			AND = {
				NOT = { religion = bahai }
				has_claim = d_bahai
			}
			is_ruler = no
			independent = no
		}
		
	}
	immediate = {
		if = {
			limit = { OR = { is_ruler = no independent = no } }
			end_anti_caliphate_effect = yes
		}
			if = {
				limit = { NOT = { religion = sunni } }
				remove_claim = d_sunni
			}
			if = {
				limit = { NOT = { religion = wahhabi } }
				remove_claim = d_wahhabi
			}
			if = {
				limit = { NOT = { religion = deobandi } }
				remove_claim = d_deobandi
			}
			if = {
				limit = { NOT = { religion = bahai } }
				remove_claim = d_bahai
			}
	}
}
narrative_event = { #TODO: Big, fancy notifications about the events of pretender caliphs
	id = AOS.2
	title = "EVTNAMEAOS2"
	desc = "EVTDESCAOS2"
	picture = GFX_evt_bishop
	border = GFX_event_narrative_frame_religion
	is_triggered_only = yes
	only_playable = yes
	major = yes
	option = {
		name = {
			text = EVTOPTAAOS2
			trigger = { NOT = { religion = ROOT } }
		}
		name = {
			text = EVTOPTBAOS2
			trigger = {
				religion = ROOT
				NOR = {
					character = ROOT
					controls_religion = yes
				}
			}
		}
		name = {
			text = EVTOPTCAOS2
			trigger = { character = ROOT }
		}
		name = {
			text = EVTOPTDAOS2
			trigger = { religion = ROOT controls_religion = yes }
		}
	}
}
narrative_event = {
	id = AOS.3
	title = "EVTNAMEAOS3"
	desc = "EVTDESCAOS3"
	picture = GFX_evt_bishop
	border = GFX_event_narrative_frame_religion
	is_triggered_only = yes
	only_playable = yes
	major = yes
	option = {
		name = {
			text = EVTOPTAAOS3
			trigger = { NOT = { religion = ROOT } }
		}
		name = {
			text = EVTOPTBAOS3
			trigger = {
				religion = ROOT
				NOR = {
					character = ROOT
					controls_religion = yes
				}
			}
		}
		name = {
			text = EVTOPTCAOS3
			trigger = { character = ROOT }
		}
		name = {
			text = EVTOPTDAOS3
			trigger = { religion = ROOT controls_religion = yes }
		}
	}
}
narrative_event = {
	id = AOS.4
	title = "EVTNAMEAOS4"
	desc = "EVTDESCAOS4"
	picture = GFX_evt_battle
	border = GFX_event_narrative_frame_religion
	is_triggered_only = yes
	only_playable = yes
	major = yes
	option = {
		name = {
			text = EVTOPTAAOS4
			trigger = { NOT = { religion = ROOT } }
		}
		name = {
			text = EVTOPTBAOS4
			trigger = {
				religion = ROOT
				NOR = {
					character = ROOT
					controls_religion = yes
				}
			}
		}
		name = {
			text = EVTOPTCAOS4
			trigger = { character = ROOT }
		}
		name = {
			text = EVTOPTDAOS4
			trigger = { religion = ROOT controls_religion = yes }
		}
	}
}
character_event = {
	id = AOS.5
	#picture = GFX_evt_bishop
	#desc = "EVTDESCAOS5" # No real caliph, therefore no pretender caliphs
	only_playable = yes
	religion_group = muslim
	hide_window = yes
	trigger = {
		is_anti_caliph = yes
		NOT = {
			religion_head = { always = yes }
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		end_anti_caliphate_effect = yes
	}
	#option = { text = EVTOPTAAOS5 }
}
character_event = { # Maintain event for reducing religious authority lose from pretender caliphs
	id = AOS.6
	hide_window = yes
	is_triggered_only = yes
	only_playable = yes
	religion_group = muslim
	trigger = {
		controls_religion = yes
	}
	immediate = {
		any_demesne_title = {
			limit = {
				controls_religion = yes
			}
			any_claimant = {
				character_event = {	id = AOS.1 }
			}
			any_claimant = {
				religion_authority = {
					modifier = anti_caliph
					years = 1
				}
				save_event_target_as = current_bad_boy
				PREV = {
					any_claimant = {
						limit = {
							NOT = { character = event_target:current_bad_boy }
						}
						opinion = { modifier = opinion_rival_caliph who = event_target:current_bad_boy years = 1 }
					}
				}
				ROOT = {
					opinion = { modifier = opinion_rival_caliph who = PREV years = 1 }
				}
				caliphate_gain_effect = yes
			}
		}
	}
}
character_event = {
	id = AOS.7
	hide_window = yes
	only_playable = yes
	trigger = {
		any_demesne_title = {
			NOT = { primary_title = { title = PREV } }
			has_title_flag = pretender_caliphate_title
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		top_liege = {
			character_event = { id = AOS.8 }
		}
		any_demesne_title = {
			limit = { has_title_flag = pretender_caliphate_title }
			clr_title_flag = pretender_caliphate_title
		}
		if = {
			limit = {
				independent = yes
				religion = sunni
				controls_religion = no
			}
			d_sunni = { add_claim = PREV }
			caliphate_gain_effect = yes
		}
		else = {
			end_anti_caliphate_effect = yes
		}		
	}
}
character_event = {
	id = AOS.8
	hide_window = yes
	religion_group = muslim
	only_playable = yes
	trigger = {
		is_anti_caliph = yes
		primary_title = {
			NOT = { has_title_flag = pretender_caliphate_title }
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		if = {
			limit = {
				any_realm_title = {
					has_title_flag = pretender_caliphate_title
				}
				independent = yes
			}
			clr_title_flag = pretender_caliphate_title
			caliphate_gain_effect = yes
		}
		else = {
			end_anti_caliphate_effect = yes
		}		
	}
}

character_event = {
	id = AOS.9
	hide_window = yes
	religion_group = muslim
	is_triggered_only = yes
	trigger = {
		OR = {
			is_anti_caliph = yes
			any_demesne_title = {
				has_title_flag = pretender_caliphate_title
			}
		}
	}
	immediate = {
		caliphate_gain_effect = yes
	}
}

### Mesopotamian emulation trait events ###

# Choose trait
character_event = {
	id = AOS.1000
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		if = {
			limit = { ai = no }
			character_event = { id = AOS.1001 }
		}
		else = {
			letter_event = { id = AOS.1003 }
		}
	}
}
character_event = {
	id = AOS.1001
	is_triggered_only = yes
	picture = GFX_evt_mesopotamian_emulation
	border = GFX_event_normal_frame_religion
	desc = EVTDESCAOS1001
	option = {
		name = EVTOPTAAOS1001
		trigger = {
			NOR = {
				trait = arbitrary
				trait = wroth
			}
		}
		add_trait = emul_hammurabi
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTBAOS1001
		trigger = {
			NOR = {
				trait = craven
				trait = cruel
			}
		}
		add_trait = emul_ashurbanipal
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTCAOS1001
		trigger = {
			NOR = {
				trait = charitable
				trait = patient
			}
		}
		add_trait = emul_nabuchadnezzar
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTDAOS1001
		character_event = { id = AOS.1002 }
	}
}
character_event = {
	id = AOS.1002
	is_triggered_only = yes
	picture = GFX_evt_mesopotamian_emulation
	border = GFX_event_normal_frame_religion
	desc = EVTDESCAOS1002
	option = {
		name = EVTOPTAAOS1002
		trigger = {
			NOR = {
				trait = honest
				trait = content
				trait = trusting
			}
		}
		add_trait = emul_nimrod
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTBAOS1002
		trigger = {
			NOR = {
				trait = craven
				trait = content
				trait = deceitful
				trait = arbitrary
				trait = dull
			}
		}
		add_trait = emul_gilgamesh
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTCAOS1002
		piety = 100
		clr_character_flag = selecting_emul_trait
	}
	option = {
		name = EVTOPTDAOS1002
		character_event = { id = AOS.1001 }
	}
}

#Scary giant letter event determining it for the AI.
letter_event = {
	id = AOS.1003
	is_triggered_only = yes
	border = GFX_event_letter_frame_religion
	desc = EVTDESCAOS1002
	option = {
		name = EVTOPTAAOS1002
		random_list = {
			10 = {
				trigger = {
					NOR = {
						trait = arbitrary
						trait = wroth
					}
				}
				modifier = {
					factor = 2
					culture = iraqi
				}
				modifier = {
					factor = 2
					trait = just
				}
				modifier = {
					factor = 2
					trait = patient
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = emul_hammurabi
						}
						mother_even_if_dead = {
							trait = emul_hammurabi
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_hammurabi
								}
								mother_even_if_dead = {
									trait = emul_hammurabi
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_hammurabi
								}
								mother_even_if_dead = {
									trait = emul_hammurabi
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_diplomacy_score = yes
				add_trait = emul_hammurabi
			}
			10 = {
				trigger = {
					NOR = {
						trait = craven
						trait = cruel
					}
				}
				modifier = {
					factor = 2
					culture = assyrian
				}
				modifier = {
					factor = 2
					trait = brave
				}
				modifier = {
					factor = 2
					trait = kind
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = emul_ashurbanipal
						}
						mother_even_if_dead = {
							trait = emul_ashurbanipal
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_ashurbanipal
								}
								mother_even_if_dead = {
									trait = emul_ashurbanipal
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_ashurbanipal
								}
								mother_even_if_dead = {
									trait = emul_ashurbanipal
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_martial_score = yes
				add_trait = emul_ashurbanipal
			}
			10 = {
				trigger = {
					NOR = {
						trait = charitable
						trait = patient
					}
				}
				modifier = {
					factor = 2.2
					trait = greedy
				}
				modifier = {
					factor = 2.2
					trait = wroth
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = emul_nabuchadnezzar
						}
						mother_even_if_dead = {
							trait = emul_nabuchadnezzar
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_nabuchadnezzar
								}
								mother_even_if_dead = {
									trait = emul_nabuchadnezzar
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_nabuchadnezzar
								}
								mother_even_if_dead = {
									trait = emul_nabuchadnezzar
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_stewardship_score = yes
				add_trait = emul_nabuchadnezzar
			}
			10 = {
				trigger = {
					NOR = {
						trait = honest
						trait = content
						trait = trusting
					}
				}
				modifier = {
					factor = 2
					culture = hungarian
				}
				modifier = {
					factor = 2
					trait = deceitful
				}
				modifier = {
					factor = 2
					trait = ambitious
				}
				modifier = {
					factor = 2
					trait = paranoid
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = emul_nimrod
						}
						mother_even_if_dead = {
							trait = emul_nimrod
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_nimrod
								}
								mother_even_if_dead = {
									trait = emul_nimrod
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_nimrod
								}
								mother_even_if_dead = {
									trait = emul_nimrod
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_intrigue_score = yes
				add_trait = emul_nimrod
			}
			10 = {
				trigger = {
					NOR = {
						trait = craven
						trait = content
						trait = deceitful
						trait = arbitrary
						trait = dull
					}
				}
				modifier = {
					factor = 2
					trait = brave
				}
				modifier = {
					factor = 2
					trait = ambitious
				}
				modifier = {
					factor = 2
					trait = honest
				}
				modifier = {
					factor = 2
					trait = just
				}
				modifier = {
					factor = 2
					trait = shrewd
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = emul_gilgamesh
						}
						mother_even_if_dead = {
							trait = emul_gilgamesh
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_gilgamesh
								}
								mother_even_if_dead = {
									trait = emul_gilgamesh
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = emul_gilgamesh
								}
								mother_even_if_dead = {
									trait = emul_gilgamesh
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_learning_score = yes
				add_trait = emul_gilgamesh
			}
			fallback = {
				piety = 100
			}
		}
	}
	after = {
		clr_character_flag = selecting_emul_trait
	}
}

# Hammurabi bonus
character_event = {
	id = AOS.1004
	hide_window = yes

	min_age = 16
	capable_only = yes
	prisoner = no
	has_job_title = yes

	trigger = {
		OR = {
			has_job_action = action_proclaim_law
			has_job_action = action_assist_arrest
		}
		trigger_if = {
			limit = {
				liege = {
					trait = emul_hammurabi
				}
				trait = emul_hammurabi
			}
			NOT = { has_character_modifier = hammurabi_bonus_2 }
		}
		trigger_else = {
			OR = {
				trait = emul_hammurabi
				liege = {
					trait = emul_hammurabi
				}
			}
			NOT = { has_character_modifier = hammurabi_bonus_1 }
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		if = {
			limit = {
				liege = {
					trait = emul_hammurabi
				}
				trait = emul_hammurabi
			}
			remove_character_modifier = hammurabi_bonus_1
			add_character_modifier = { name = hammurabi_bonus_2 duration = -1 }
		}
		else = {
			remove_character_modifier = hammurabi_bonus_2
			add_character_modifier = { name = hammurabi_bonus_1 duration = -1 }
		}
		set_character_flag = hammurabi_bonus # For pleasing the CPU gods
	}
}
character_event = {
	id = AOS.1005
	hide_window = yes

	min_age = 16
	has_character_flag = hammurabi_bonus
	
	trigger = {
		OR = {
			has_character_modifier = hammurabi_bonus_1
			has_character_modifier = hammurabi_bonus_2
		}
		OR = {
			NOR = {
				has_job_action = action_proclaim_law
				has_job_action = action_assist_arrest
			}
			trigger_if = {
				limit = {
					has_character_modifier = hammurabi_bonus_2
				}
				NAND = {
					liege = {
						trait = emul_hammurabi
					}
					trait = emul_hammurabi
				}
			}
			trigger_else = {
				has_character_modifier = hammurabi_bonus_1
				NOR = {
					trait = emul_hammurabi
					liege = {
						trait = emul_hammurabi
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		remove_character_modifier = hammurabi_bonus_1
		remove_character_modifier = hammurabi_bonus_2
		clr_character_flag = hammurabi_bonus
		character_event = { id = AOS.1004 }
	}
}

# Lose emulation trait
character_event = {
	id = AOS.1006
	
	picture = GFX_evt_mesopotamian_emulation
	border = GFX_event_normal_frame_religion
	desc = EVTDESCAOS1006
	
	min_age = 16
	religion = mesopotamian
	
	trigger = {
		trigger_if = {
			limit = { trait = emul_hammurabi }
			OR = {
				trait = arbitrary
				trait = wroth
			}
		}
		trigger_else_if = {
			limit = { trait = emul_ashurbanipal }
			OR = {
				trait = craven
				trait = cruel
			}
		}
		trigger_else_if = {
			limit = { trait = emul_nabuchadnezzar }
			OR = {
				trait = charitable
				trait = patient
			}
		}
		trigger_else_if = {
			limit = { trait = emul_nimrod }
			OR = {
				trait = honest
				trait = content
				trait = trusting
			}
		}
		trigger_else = {
			trait = emul_gilgamesh
			OR = {
				trait = craven
				trait = content
				trait = deceitful
				trait = arbitrary
				trait = dull
			}
		}
	}
	mean_time_to_happen = {
		months = 2
	}
	option = {
		name = EVTOPTAAOS1006
		if = {
			limit = { trait = emul_hammurabi }
			remove_trait = emul_hammurabi
		}
		else_if = {
			limit = { trait = emul_ashurbanipal }
			remove_trait = emul_ashurbanipal
		}
		else_if = {
			limit = { trait = emul_nabuchadnezzar }
			remove_trait = emul_nabuchadnezzar
		}
		else_if = {
			limit = { trait = emul_nimrod }
			remove_trait = emul_nimrod
		}
		else = {
			remove_trait = emul_gilgamesh
		}
	}
	option = {
		name = EVTOPTBAOS1006
		tooltip_info = stubborn
		trigger = {
			trait = stubborn
			trigger_if = {
				limit = { trait = emul_hammurabi }
				NAND = {
					trait = arbitrary
					trait = wroth
				}
			}
			trigger_else_if = {
				limit = { trait = emul_ashurbanipal }
				NAND = {
					trait = craven
					trait = cruel
				}
			}
			trigger_else_if = {
				limit = { trait = emul_nabuchadnezzar }
				NAND = {
					trait = charitable
					trait = patient
				}
			}
			trigger_else_if = {
				limit = { trait = emul_nimrod }
				NAND = {
					trait = honest
					trait = content
					trait = trusting
				}
			}
			trigger_else = {
				trait = emul_gilgamesh
				calc_true_if = {
					amount = 2
					trait = craven
					trait = content
					trait = deceitful
					trait = arbitrary
					trait = dull
				}
			}
			NAND = {
				has_character_flag = emulation_used_stubborn
				NOT = { had_character_flag = { flag = emulation_used_stubborn days = 3650 } }
			}
		}
		if = {
			limit = { trait = emul_hammurabi }
			remove_trait_wroth_effect = yes
			remove_trait_arbitrary_effect = yes
		}
		else_if = {
			limit = { trait = emul_ashurbanipal }
			remove_trait_cruel_effect = yes
			remove_trait_silently_craven_effect = yes
		}
		else_if = {
			limit = { trait = emul_nabuchadnezzar }
			remove_trait_silently_charitable_effect = yes
			remove_trait_silently_patient_effect = yes
		}
		else_if = {
			limit = { trait = emul_nimrod }
			remove_trait_silently_content_effect = yes
			remove_trait_silently_honest_effect = yes
			remove_trait_silently_trusting_effect = yes
		}
		else = {
			remove_trait_silently_craven_effect = yes
			remove_trait_silently_content_effect = yes
			remove_trait_deceitful_effect = yes
			remove_trait_arbitrary_effect = yes
			#below doesn't exist - tsf4
			#remove_trait_dull_effect = yes
		}
		clr_character_flag = emulation_used_stubborn
		set_character_flag = emulation_used_stubborn
	}
}

# Confusion of Babel
character_event = {
	id = AOS.1007
	title = EVTNAMEAOS1007
	desc = EVTDESCAOS1007
	picture = "GFX_evt_culture_change"
	border = GFX_event_normal_frame_intrigue

	min_age = 16
	capable_only = yes
	prisoner = no
	has_job_title = yes

	trigger = {
		has_job_action = action_sabotage_province
		NOT = { has_character_modifier = in_seclusion }
		is_incapable = no
		liege = {
			trait = emul_nimrod
			ROOT = {
				location = {
					can_be_converted_via_babel = yes
				}
			}
		}
	}
	
	
	mean_time_to_happen = {
		months = 600

		modifier = {
			factor = 0.85
			trait = emul_nimrod
		}
		# Liege always has the trait
		modifier = {
			factor = 3
			OR = {
				has_game_rule = {
					name = culture_conversion
					value = slower_normal
				}
				has_game_rule = {
					name = culture_conversion
					value = faster_melting_pots_and_slower_normal
				}
			}
		}
		modifier = {
			factor = 10000000000000
			NOT = {
				liege = {
					trait = emul_nimrod
					ROOT = {
						trigger_if = {
							limit = { has_job_action = action_sabotage_province } # Only check if already on the map
							location = {
								can_be_converted_via_babel = yes
							}
						}
					}
				}
			}
		}
		job_event_mtth_modifier_intrigue_score = yes
	}
	
	option = {
		name = EVTOPTAAOS1007

		prestige = 50
		
		liege = { character_event = { id = AOS.1008 tooltip = "EVTTOOLTIP20410"  } }
	}
}

# The liege is informed
character_event = {
	id = AOS.1008
	title = EVTNAMEAOS1007
	desc = EVTDESCAOS1008
	picture = "GFX_evt_culture_change"
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTAAOS1008
		FROM = {
			location = {
				culture = ROOT
				if = {
					limit = {
						has_province_modifier = nomad_agitation
					}
					remove_province_modifier = nomad_agitation
				}
				add_province_modifier = { name = confusion_of_babel days = 3650 }
			}
		}
		opinion = {
			who = FROM
			modifier = opinion_grateful
			months = 60
		}
	}
}

# Chariots made
character_event = {
	id = AOS.1009
	title = EVTNAMEAOS1009
	desc = EVTDESCAOS1009
	picture = GFX_evt_large_army
	border = GFX_event_normal_frame_war

	min_age = 16
	capable_only = yes
	prisoner = no
	has_job_title = yes

	trigger = {
		has_job_action = action_train_troops
		NOT = { has_character_modifier = in_seclusion }
		is_incapable = no
		location = {
			owner = {
				job_marshal = {
					character = ROOT
				}
			}
		}
		liege = {
			trait = emul_ashurbanipal
		}
	}

	mean_time_to_happen = {
		months = 240
		
		modifier = {
			factor = 0.85
			trait = emul_ashurbanipal
		}
		# Liege always has the trait
		modifier = {
			factor = 10000000000000
			liege = {
				NOT = { trait = emul_ashurbanipal }
			}
		}
		
		job_event_mtth_modifier_martial_score = yes
	}

	option = {
		name = "EVTOPTAAOS1009"
		liege = { character_event = { id = AOS.1010 tooltip = "EVTTOOLTIP20410" } }
	}
}

# The liege is informed
character_event = {
	id = AOS.1010
	picture = GFX_evt_large_army
	border = GFX_event_normal_frame_war
	title = EVTNAMEAOS1009
	desc = EVTDESCAOS1010

	is_triggered_only = yes
	immediate = {
		FROM = {
			location = {
				any_province_holding = {
					limit = { owner = { character = ROOT } }
					score_value = {
						value = 1
						additive_modifier = {
							value = 4
							NOT = { has_province_modifier = ashurbanipal_chariot }
						}
						additive_modifier = {
							value = 2
							is_capital = yes
						}
						additive_modifier = {
							value = 1
							is_preferred_holding_type = ROOT
						}
					}
					save_event_target_as = chariot_builder_target
				}
			}
		}
	}
	option = {
		name = "EVTOPTAAOS1010"
		event_target:chariot_builder_target = {
			hidden_tooltip = { remove_holding_modifier = ashurbanipal_chariot }
			add_holding_modifier = {
				name = ashurbanipal_chariot
				duration = 7300
			}
		}
	}
}