namespace = novelist

#########################################
#
#	Novelist religious events
#
#########################################
# Gain a bonus
character_event = {
	id = novelist.1
	is_triggered_only = yes
	picture = GFX_evt_book_carolingian_script
	border = GFX_event_normal_frame_religion

	hide_from = yes

	desc = {
		text = novelist1Desc

	}
	immediate = {
		set_character_flag = picking_novelist_patron
	}
	
	option = {#School of the King, a more militant school that's focussed on the uniqueness of the Novelist faith
		name = EVTOPTA_novelist1
		if = {
			limit = { religion = novelist }
			add_trait = novelist_son_of_aslan
		}
		else = {
			add_trait = novelist_reformed_son_of_aslan
		}
	}
	
	option = {#School of The Cross, a pro-Christian more syncretic school that's more learning based
		name = EVTOPTB_novelist1
		if = {
			limit = { religion = novelist }
			add_trait = novelist_elf_friend
		}
		else = {
			add_trait = novelist_reformed_elf_friend
		}
	}
	
	option = {#A third school that's simultaneously allied with and at war with the other two.
		name = EVTOPTC_novelist1
		if = {
			limit = { religion = novelist }
			add_trait = novelist_star_child
		}
		else = {
			add_trait = novelist_reformed_star_child
		}
	}
	
	option = {#A third school that's simultaneously allied with and at war with the other two.
		name = EVTOPTD_novelist1
		hidden_tooltip = { character_event = { id = novelist.2 } }
	}
	
	after = {
		clr_character_flag = picking_novelist_patron
	}
}

character_event = {
	id = novelist.2
	is_triggered_only = yes
	picture = GFX_evt_book_carolingian_script
	border = GFX_event_normal_frame_religion

	hide_from = yes

	desc = {
		text = novelist2Desc

	}
	immediate = {
		set_character_flag = picking_novelist_patron
	}

	
	option = {#School of the King, a more militant school that's focussed on the uniqueness of the Novelist faith
		name = EVTOPTA_novelist2
		if = {
			limit = { religion = novelist }
			add_trait = novelist_kings_man
		}
		else = {
			add_trait = novelist_reformed_kings_man
		}
	}
	
	option = {#School of The Cross, a pro-Christian more syncretic school that's more learning based
		name = EVTOPTB_novelist2
		if = {
			limit = { religion = novelist }
			add_trait = novelist_ingsoc
		}
		else = {
			add_trait = novelist_reformed_ingsoc
		}
	}
	
	option = {#A third school that's simultaneously allied with and at war with the other two.
		name = EVTOPTC_novelist2
		piety = 50
	}
	
	option = {#A third school that's simultaneously allied with and at war with the other two.
		name = EVTOPTD_novelist2
		hidden_tooltip = { character_event = { id = novelist.1 } }
	}
	
	after = {
		clr_character_flag = picking_novelist_patron
	}
}

#Scary giant letter event determining it for the AI.
#TODO: Make personality matter.
letter_event = {
	id = novelist.5
	is_triggered_only = yes
	border = GFX_event_letter_frame_religion
	desc = novelist5Desc
	option = {
		name = EVTOPTA_novelist5
		random_list = {
			10 = {
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_son_of_aslan
						}
						mother_even_if_dead = {
							trait = novelist_son_of_aslan
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_son_of_aslan
								}
								mother_even_if_dead = {
									trait = novelist_son_of_aslan
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_son_of_aslan
								}
								mother_even_if_dead = {
									trait = novelist_son_of_aslan
								}
							}
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_reformed_son_of_aslan
						}
						mother_even_if_dead = {
							trait = novelist_reformed_son_of_aslan
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_son_of_aslan
								}
								mother_even_if_dead = {
									trait = novelist_reformed_son_of_aslan
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_son_of_aslan
								}
								mother_even_if_dead = {
									trait = novelist_reformed_son_of_aslan
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_diplomacy_score = yes
				if = {
					limit = { religion = novelist }
					add_trait = novelist_son_of_aslan
				}
				else = {
					add_trait = novelist_reformed_son_of_aslan
				}
			}
			10 = {
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_kings_man
						}
						mother_even_if_dead = {
							trait = novelist_kings_man
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_kings_man
								}
								mother_even_if_dead = {
									trait = novelist_kings_man
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_kings_man
								}
								mother_even_if_dead = {
									trait = novelist_kings_man
								}
							}
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_reformed_kings_man
						}
						mother_even_if_dead = {
							trait = novelist_reformed_kings_man
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_kings_man
								}
								mother_even_if_dead = {
									trait = novelist_reformed_kings_man
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_kings_man
								}
								mother_even_if_dead = {
									trait = novelist_reformed_kings_man
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_martial_score = yes
				if = {
					limit = { religion = novelist }
					add_trait = novelist_kings_man
				}
				else = {
					add_trait = novelist_reformed_kings_man
				}
			}
			10 = {
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_star_child
						}
						mother_even_if_dead = {
							trait = novelist_star_child
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_star_child
								}
								mother_even_if_dead = {
									trait = novelist_star_child
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_star_child
								}
								mother_even_if_dead = {
									trait = novelist_star_child
								}
							}
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_reformed_star_child
						}
						mother_even_if_dead = {
							trait = novelist_reformed_star_child
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_star_child
								}
								mother_even_if_dead = {
									trait = novelist_reformed_star_child
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_star_child
								}
								mother_even_if_dead = {
									trait = novelist_reformed_star_child
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_stewardship_score = yes
				if = {
					limit = { religion = novelist }
					add_trait = novelist_star_child
				}
				else = {
					add_trait = novelist_reformed_star_child
				}
			}
			10 = {
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_ingsoc
						}
						mother_even_if_dead = {
							trait = novelist_ingsoc
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_ingsoc
								}
								mother_even_if_dead = {
									trait = novelist_ingsoc
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_ingsoc
								}
								mother_even_if_dead = {
									trait = novelist_ingsoc
								}
							}
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_reformed_ingsoc
						}
						mother_even_if_dead = {
							trait = novelist_reformed_ingsoc
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_ingsoc
								}
								mother_even_if_dead = {
									trait = novelist_reformed_ingsoc
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_ingsoc
								}
								mother_even_if_dead = {
									trait = novelist_reformed_ingsoc
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_intrigue_score = yes
				if = {
					limit = { religion = novelist }
					add_trait = novelist_ingsoc
				}
				else = {
					add_trait = novelist_reformed_ingsoc
				}
			}
			10 = {
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_elf_friend
						}
						mother_even_if_dead = {
							trait = novelist_elf_friend
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_elf_friend
								}
								mother_even_if_dead = {
									trait = novelist_elf_friend
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_elf_friend
								}
								mother_even_if_dead = {
									trait = novelist_elf_friend
								}
							}
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						father_even_if_dead = {
							trait = novelist_reformed_elf_friend
						}
						mother_even_if_dead = {
							trait = novelist_reformed_elf_friend
						}
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						father_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_elf_friend
								}
								mother_even_if_dead = {
									trait = novelist_reformed_elf_friend
								}
							}
						}
						mother_even_if_dead = {
							OR = {
								father_even_if_dead = {
									trait = novelist_reformed_elf_friend
								}
								mother_even_if_dead = {
									trait = novelist_reformed_elf_friend
								}
							}
						}
					}
				}
				job_event_mtth_modifier_inverted_learning_score = yes
				if = {
					limit = { religion = novelist }
					add_trait = novelist_elf_friend
				}
				else = {
					add_trait = novelist_reformed_elf_friend
				}
			}
		}
	}
	after = {
		clr_character_flag = picking_novelist_patron
	}
}

narrative_event = {#Restoration of Numenor
	id = novelist.50
	is_triggered_only = yes
	picture = GFX_evt_book_carolingian_script
	border = GFX_event_narrative_frame_war
	title = novelist50Title
	
	hide_from = yes

	desc = {
		text = novelist50Desc

	}

	
	option = {#Novelist Response
		name = EVTOPTA_novelist50
		trigger = {
			OR = {
				religion = novelist
				religion = novelist_reformed
			}
		}
	}
	
	option = {#British response
		name = EVTOPTB_novelist50
		trigger = {
			OR = {
				culture_group = brittannic
			}
		}
	}
	option = {#Catholic response
		name = EVTOPTC_novelist50
		trigger = {
			religion = catholic
		}
	}
	option = {#Other response
		name = EVTOPTD_novelist50
		trigger = {
			NOR = {
				religion = novelist
				religion = novelist_reformed
				religion = catholic
				culture_group = brittannic
			}
		}
	}
}

character_event = {
	id = novelist.100
	is_triggered_only = yes
	hide_window = yes
	hide_from = yes

	religion = catholic
	only_playable = yes
	min_age = 16

	trigger = {
		controls_religion = yes
	}
	immediate = {
		k_france = {
			save_persistent_event_target = { name = novelist_title scope = k_gondor }
			save_persistent_event_target = { name = non_novelist_title scope = k_france_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_doggerland = {
			save_persistent_event_target = { name = novelist_title scope = k_beleriand }
			save_persistent_event_target = { name = non_novelist_title scope = k_doggerland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_aquitaine = {
			save_persistent_event_target = { name = novelist_title scope = k_arnor }
			save_persistent_event_target = { name = non_novelist_title scope = k_aquitaine_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_prussia = {
			save_persistent_event_target = { name = novelist_title scope = k_gorgoroth }
			save_persistent_event_target = { name = non_novelist_title scope = k_prussia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_bavarja = {
			save_persistent_event_target = { name = novelist_title scope = k_gundabad }
			save_persistent_event_target = { name = non_novelist_title scope = k_bavarja_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_rhineland = {
			save_persistent_event_target = { name = novelist_title scope = k_rhun }
			save_persistent_event_target = { name = non_novelist_title scope = k_rhineland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_saxon = {
			save_persistent_event_target = { name = novelist_title scope = k_rhonvanion }
			save_persistent_event_target = { name = non_novelist_title scope = k_saxon_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_hessia = {
			save_persistent_event_target = { name = novelist_title scope = k_gerolstein }
			save_persistent_event_target = { name = non_novelist_title scope = k_hessia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_saxony = {
			save_persistent_event_target = { name = novelist_title scope = k_dale }
			save_persistent_event_target = { name = non_novelist_title scope = k_saxony_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_austria = {
			save_persistent_event_target = { name = novelist_title scope = k_belegost }
			save_persistent_event_target = { name = non_novelist_title scope = k_austria_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_burgundy = {
			save_persistent_event_target = { name = novelist_title scope = k_broceliande }
			save_persistent_event_target = { name = non_novelist_title scope = k_burgundy_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_normandy = {
			save_persistent_event_target = { name = novelist_title scope = k_gallia }
			save_persistent_event_target = { name = non_novelist_title scope = k_normandy_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_ireland = {
			save_persistent_event_target = { name = novelist_title scope = k_narnia }
			save_persistent_event_target = { name = non_novelist_title scope = k_ireland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_scotland = {
			save_persistent_event_target = { name = novelist_title scope = k_telmarine }
			save_persistent_event_target = { name = non_novelist_title scope = k_scotland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_britannia = {
			save_persistent_event_target = { name = novelist_title scope = k_angband }
			save_persistent_event_target = { name = non_novelist_title scope = k_britannia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_wales = {
			save_persistent_event_target = { name = novelist_title scope = k_camelot }
			save_persistent_event_target = { name = non_novelist_title scope = k_wales_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_england = {
			save_persistent_event_target = { name = novelist_title scope = k_shire }
			save_persistent_event_target = { name = non_novelist_title scope = k_england_history }
			set_title_flag = novelist_shortname
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_britannia = {
			save_persistent_event_target = { name = novelist_title scope = e_calormen }
			save_persistent_event_target = { name = non_novelist_title scope = e_britannia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_france = {
			save_persistent_event_target = { name = novelist_title scope = e_numenor }
			save_persistent_event_target = { name = non_novelist_title scope = e_france_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_european_union = {
			save_persistent_event_target = { name = novelist_title scope = e_middle_earth }
			save_persistent_event_target = { name = non_novelist_title scope = e_european_union_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_italy = {
			save_persistent_event_target = { name = novelist_title scope = e_nilfgaard }
			save_persistent_event_target = { name = non_novelist_title scope = e_italy_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_scandinavia = {
			save_persistent_event_target = { name = novelist_title scope = e_the_north }
			save_persistent_event_target = { name = non_novelist_title scope = e_scandinavia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_spain = {
			save_persistent_event_target = { name = novelist_title scope = e_archenland }
			save_persistent_event_target = { name = non_novelist_title scope = e_spain_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_germany = {
			save_persistent_event_target = { name = novelist_title scope = e_mordor }
			save_persistent_event_target = { name = non_novelist_title scope = e_germany_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_alps = {
			save_persistent_event_target = { name = novelist_title scope = e_misty_mountains }
			save_persistent_event_target = { name = non_novelist_title scope = e_alps_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_algeria = {
			save_persistent_event_target = { name = novelist_title scope = k_harad }
			save_persistent_event_target = { name = non_novelist_title scope = k_algeria_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_morocco = {
			save_persistent_event_target = { name = novelist_title scope = k_ghis }
			save_persistent_event_target = { name = non_novelist_title scope = k_morocco_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_libya = {
			save_persistent_event_target = { name = novelist_title scope = k_yunkai }
			save_persistent_event_target = { name = non_novelist_title scope = k_libya_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_africa = {
			save_persistent_event_target = { name = novelist_title scope = k_astapor }
			save_persistent_event_target = { name = non_novelist_title scope = k_africa_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_byzantium = {
			save_persistent_event_target = { name = novelist_title scope = k_valyria }
			save_persistent_event_target = { name = non_novelist_title scope = k_byzantium_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_maghreb = {
			save_persistent_event_target = { name = novelist_title scope = e_ghiscar }
			save_persistent_event_target = { name = non_novelist_title scope = e_maghreb_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_italy = {
			save_persistent_event_target = { name = novelist_title scope = k_toussaint }
			save_persistent_event_target = { name = non_novelist_title scope = k_italy_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_lombardo-veneto = {
			save_persistent_event_target = { name = novelist_title scope = k_kovir_povis }
			save_persistent_event_target = { name = non_novelist_title scope = k_lombardo-veneto_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_tuscany = {
			save_persistent_event_target = { name = novelist_title scope = k_redania }
			save_persistent_event_target = { name = non_novelist_title scope = k_tuscany_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_san_marino = {
			save_persistent_event_target = { name = novelist_title scope = k_kaedwen }
			save_persistent_event_target = { name = non_novelist_title scope = k_san_marino_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_latium = {
			save_persistent_event_target = { name = novelist_title scope = k_nilfgaardia }
			save_persistent_event_target = { name = non_novelist_title scope = k_latium_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_two_siciles = {
			save_persistent_event_target = { name = novelist_title scope = k_etolia }
			save_persistent_event_target = { name = non_novelist_title scope = k_two_siciles_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_sardinia = {
			save_persistent_event_target = { name = novelist_title scope = k_ofir }
			save_persistent_event_target = { name = non_novelist_title scope = k_sardinia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_basque = {
			save_persistent_event_target = { name = novelist_title scope = k_underland }
			save_persistent_event_target = { name = non_novelist_title scope = k_basque_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_andorra = {
			save_persistent_event_target = { name = novelist_title scope = k_minas_ithil }
			save_persistent_event_target = { name = non_novelist_title scope = k_andorra_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_catalunia = {
			save_persistent_event_target = { name = novelist_title scope = k_harondor }
			save_persistent_event_target = { name = non_novelist_title scope = k_catalunia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_galicia_y_asturias = {
			save_persistent_event_target = { name = novelist_title scope = k_ered_liun }
			save_persistent_event_target = { name = non_novelist_title scope = k_galicia_y_asturias_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_andalusia = {
			save_persistent_event_target = { name = novelist_title scope = k_cintra }
			save_persistent_event_target = { name = non_novelist_title scope = k_andalusia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_castille = {
			save_persistent_event_target = { name = novelist_title scope = k_aedirn }
			save_persistent_event_target = { name = non_novelist_title scope = k_castille_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_portugal = {
			save_persistent_event_target = { name = novelist_title scope = k_umbar }
			save_persistent_event_target = { name = non_novelist_title scope = k_portugal_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_hungary = {
			save_persistent_event_target = { name = novelist_title scope = k_rohan }
			save_persistent_event_target = { name = non_novelist_title scope = k_hungary_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_bohemia = {
			save_persistent_event_target = { name = novelist_title scope = k_fantastica }
			save_persistent_event_target = { name = non_novelist_title scope = k_bohemia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_carpathia = {
			save_persistent_event_target = { name = novelist_title scope = e_agatean_empire }
			save_persistent_event_target = { name = non_novelist_title scope = e_carpathia_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_holland = {
			save_persistent_event_target = { name = novelist_title scope = k_pelargir }
			save_persistent_event_target = { name = non_novelist_title scope = k_holland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_belgium = {
			save_persistent_event_target = { name = novelist_title scope = k_breeland }
			save_persistent_event_target = { name = non_novelist_title scope = k_belgium_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_luxemburg = {
			save_persistent_event_target = { name = novelist_title scope = k_esgaroth }
			save_persistent_event_target = { name = non_novelist_title scope = k_luxemburg_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		e_benelux = {
			save_persistent_event_target = { name = novelist_title scope = e_enedwaith }
			save_persistent_event_target = { name = non_novelist_title scope = e_benelux_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_cornwall = {
			save_persistent_event_target = { name = novelist_title scope = k_charn }
			save_persistent_event_target = { name = non_novelist_title scope = k_cornwall_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_lichtenstein = {
			save_persistent_event_target = { name = novelist_title scope = k_moria }
			save_persistent_event_target = { name = non_novelist_title scope = k_lichtenstein_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_switzerland = {
			save_persistent_event_target = { name = novelist_title scope = k_erebor }
			save_persistent_event_target = { name = non_novelist_title scope = k_switzerland_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_brittany = {
			save_persistent_event_target = { name = novelist_title scope = k_grey_havens }
			save_persistent_event_target = { name = non_novelist_title scope = k_brittany_history }
			set_title_flag = novelist_shortname
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_romania = {
			save_persistent_event_target = { name = novelist_title scope = k_transylvania }
			save_persistent_event_target = { name = non_novelist_title scope = k_romania_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
		k_provance = {
			save_persistent_event_target = { name = novelist_title scope = k_dorwinion }
			save_persistent_event_target = { name = non_novelist_title scope = k_provance_history }
			persistent_event_target:non_novelist_title = {
				set_name = PREV
				copy_title_history = PREV
			}
		}
	}
}

character_event = {
	id = novelist.101
	is_triggered_only = yes
	hide_window = yes
	hide_from = yes
	
	trigger = {
		FROM = { novelist_switch_trigger = yes }
	}
	
	immediate = {
		FROM = { novelist_switch_effect = yes }
	}
}

character_event = {
	id = novelist.102
	is_triggered_only = yes
	hide_window = yes
	hide_from = yes
	only_playable = yes
	
	trigger = {
		any_demesne_title = {
			novelist_switch_trigger = yes
		}
	}
	
	immediate = {
		any_demesne_title = {
			novelist_switch_effect = yes
		}
	}
}

character_event = {
	id = novelist.103
	hide_window = yes
 
	only_rulers = yes
 
	trigger = {
		has_landed_title = k_holland
		NOT = { has_global_flag = switch_startup_titles }
		is_alternate_start = no
	}
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		set_global_flag = switch_startup_titles
		character_event = { id = novelist.102 }
	}
}
character_event = {
	id = novelist.104
	hide_window = yes
 
	only_rulers = yes
 
	trigger = {
		has_landed_title = k_belgium
		NOT = { has_global_flag = switch_startup_titles_2 }
		is_alternate_start = no
	}
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		set_global_flag = switch_startup_titles_2
		character_event = { id = novelist.102 }
	}
}
character_event = {
	id = novelist.105
	hide_window = yes
 
	only_rulers = yes
 
	trigger = {
		has_landed_title = k_luxemburg
		NOT = { has_global_flag = switch_startup_titles_3 }
		is_alternate_start = no
	}
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		set_global_flag = switch_startup_titles_3
		character_event = { id = novelist.102 }
	}
}
#########################################
#
#	Novelist story events
#
#########################################

#########################################
#	A Quiet Front
#########################################

character_event = {
	id = novelist.1000
	is_triggered_only = yes
	hide_window = yes
	only_rulers = yes
	trigger = {
		religion_openly_novelist_or_reformed_trigger = yes
		culture_group = germanic
		killer = {
			OR = {
				culture_group = francophone
				culture_group = occitanophone
				culture_group = goidelic
				culture_group = brythonic
				culture_group = brittannic
			}
		}
		OR = {
			death_reason = death_battle
			death_reason = death_battle_duel
		}
	}
	immediate = {
		player_heir = {
			character_event = { id = novelist.1001 days = 5 }
		}
	}
}
character_event = {
	id = novelist.1001
	is_triggered_only = yes
	
	picture = GFX_evt_died_battle
	border = GFX_event_normal_frame_war
	desc = novelist1001Desc
	title = novelist1001Title
	
	only_rulers = yes
	trigger = {
		religion_openly_novelist_or_reformed_trigger = yes
	}
	
	option = {
		name = EVTOPTA_novelist1001
		add_trait = depressed
	}
	option = {
		name = EVTOPTB_novelist1001
		add_trait = cynical
	}
	option = {
		name = EVTOPTC_novelist1001
		trigger = {
			in_command = yes
		}
		add_trait = zealous
	}
	option = {
		name = EVTOPTD_novelist1001
		trigger = {
			in_command = yes
		}
		add_trait = craven
	}
}

#########################################
#	Sleeping Beauty
#########################################

narrative_event = {
	id = novelist.1010
	
	picture = GFX_evt_castle_construction
	desc = novelist1010Desc
	title = novelist1010Title
	
	only_playable = yes
	only_capable = yes
	min_age = 16
	max_age = 25
	religion_group = pagan_group
	is_triggered_only = yes
	trigger = {
		religion_openly_novelist_or_reformed_trigger = yes
		# Not doing anything else
		is_inaccessible_trigger = no
		NOT = { has_character_flag = do_not_disturb }
		NOT = { has_character_flag = had_sleeping_beauty_event }
		prefers_men_trigger = no
	}
	
	immediate = {
		set_character_flag = had_sleeping_beauty_event
		random_demesne_province = {
			save_event_target_as = sleeping_beauty_province
		}
	}
	
	option = {
		name = EVTOPTA_novelist1010
		custom_tooltip = {
			text = EVTOPTA_novelist1010_tooltip
			random_list = {
				34 = { narrative_event = { id = novelist.1011 } }
				33 = { narrative_event = { id = novelist.1012 } }
				33 = { narrative_event = { id = novelist.1013 } }
			}
		}
	}
	option = {
		name = EVTOPTB_novelist1010
		tooltip_info = lunatic
		trigger = {
			trait = lunatic
		}
		add_artifact = head_of_the_princess
		piety = -50
	}
	option = {
		name = EVTOPTC_novelist1010
		tooltip_info = greedy
		trigger = {
			trait = greedy
		}
		add_artifact = necklar_of_the_princess
	}
	option = {
		name = EVTOPTD_novelist1010
		if = {
			limit = {
				trait = lustful
			}
			random = {
				chance = 50
				remove_trait = lustful
			}
		}
		if = {
			limit = {
				NOT = { trait = paranoid }
			}
			random = {
				chance = 50
				hidden_tooltip = { remove_trait_silently_trusting_effect = yes }
				add_trait_paranoid_effect = yes
			}
		}
	}
}
narrative_event = {
	id = novelist.1011
	
	picture = GFX_evt_princess_byzantine
	desc = novelist1011Desc
	title = novelist1010Title
	portrait = event_target:sleeping_beauty
	is_triggered_only = yes
	immediate = {
		spawn_sleeping_beauty_effect = yes
	}
	
	option = {
		name = EVTOPTA_novelist1011
		add_lover = event_target:sleeping_beauty
	}
	option = {
		name = EVTOPTB_novelist1011
		if = {
			limit = { NOT = { trait = chaste } }
			add_trait = chaste
		}
		piety = 50
		prestige = 50
	}
	option = {
		name = EVTOPTC_novelist1011
		add_artifact = necklar_of_the_princess
		if = {
			limit = { NOT = { trait = greedy } }
			add_trait = greedy
		}
		event_target:sleeping_beauty = {
			banish = yes
		}
	}
}
narrative_event = {
	id = novelist.1012
	
	picture = GFX_evt_moonlit_mountains_hf
	desc = novelist1012Desc
	title = novelist1010Title
	is_triggered_only = yes
	option = {
		name = EVTOPTA_novelist1012
		if = {
			limit = {
				NOT = { trait = possessed }
			}
			random = {
				chance = 25
				add_trait = possessed
			}
		}
	}
	option = {
		name = EVTOPTB_novelist1012
		if = {
			limit = { NOT = { trait = cynical } }
			add_trait = cynical
		}
	}
}
narrative_event = {
	id = novelist.1013
	
	picture = GFX_evt_lovers
	desc = novelist1013Desc
	title = novelist1010Title
	is_triggered_only = yes
	option = {
		name = EVTOPTA_novelist1013
		if = {
			limit = { NOT = { trait = lustful } }
			add_trait = lustful
		}
		hidden_tooltip = {
			random = {
				chance = 50
				modifier = {
					factor = 0
					is_infertile_trigger = yes
				}
				modifier = {
					factor = 0
					is_female = yes
				}
				character_event = { id = novelist.1014 days = 820 random = 30 }
			}
		}
	}
	option = {
		name = EVTOPTB_novelist1013
		if = {
			limit = { NOT = { trait = chaste } }
			add_trait = chaste
		}
	}
}
character_event = {
	id = novelist.1014
	
	picture = GFX_evt_birth
	desc = novelist1014Desc
	title = novelist1010Title
	portrait = event_target:new_kid
	is_triggered_only = yes
	immediate = {
		create_character = {
			age = 2
			trait = fair
			trait = bastard
			random_traits = no
			genetic_father = ROOT
			dynasty = ROOT
			culture = event_target:sleeping_beauty_province
		}
		new_character = {
			set_father = ROOT
			set_real_father = ROOT
			save_event_target_as = new_kid
		}
	}
	option = {
		name = EVTOPTA_novelist1014
	}
}


#########################################
#	Beauty and the Beast
#########################################

narrative_event = {
	id = novelist.1100
	
	picture = GFX_evt_hunt
	border = GFX_event_narrative_frame_war
	desc = novelist1100Desc
	title = novelist1100Title
	
	only_playable = yes
	only_capable = yes
	min_age = 16
	religion_group = pagan_group
	trigger = {
		religion_openly_novelist_or_reformed_trigger = yes
		# Not doing anything else
		is_inaccessible_trigger = no
		NOT = { has_character_flag = do_not_disturb }
		NOT = { has_character_flag = had_beauty_and_the_beast_event }
	}
	
	mean_time_to_happen = {
		months = 3600 # 300 years, that should be rare
		modifier = {
			factor = 0.5
			trait = hunter
		}
	}
	
	immediate = {
		set_character_flag = had_beauty_and_the_beast_event
	}
	
	option = {
		name = EVTOPTA_novelist1100
		tooltip_info = hunter
		trigger = {
			trait = hunter
		}
		if = {
			limit = {
				trait = craven
			}
			remove_trait_craven_effect = yes
		}
		else_if = {
			limit = {
				NOT = { trait = brave }
			}
			random = {
				chance = 50
				add_trait_brave_effect = yes
			}
		}
		custom_tooltip = {
			text = EVTOPTA_novelist1100_tooltip
			random_list = {
				35 = { character_event = { id = novelist.1101 days = 10 random = 10 } } # Old greedy man knows the way
				15 = { character_event = { id = novelist.1105 days = 10 random = 10 } } # Pretty much failed
				50 = { narrative_event = { id = novelist.1110 days = 10 random = 20 } } # Found eventlessly
			}
		}
		set_character_flag = do_not_disturb
	}
	option = {
		name = EVTOPTB_novelist1100
		trigger = {
			NOT = { trait = hunter }
		}
		if = {
			limit = {
				trait = craven
			}
			remove_trait_craven_effect = yes
		}
		else_if = {
			limit = {
				NOT = { trait = brave }
			}
			random = {
				chance = 50
				add_trait_brave_effect = yes
			}
		}
		custom_tooltip = {
			text = EVTOPTA_novelist1100_tooltip
			random_list = {
				25 = { character_event = { id = novelist.1101 days = 10 random = 10 } } # Old greedy man knows the way
				70 = { character_event = { id = novelist.1105 days = 10 random = 10 } } # Pretty much failed
				5  = { narrative_event = { id = novelist.1110 days = 10 random = 20 } } # Found eventlessly
			}
		}
		set_character_flag = do_not_disturb
	}
	option = {
		name = EVTOPTC_novelist1100
		random_list = {
			50 = {
				hidden_tooltip = { remove_trait_silently_brave_effect = yes }
				add_trait_craven_effect = yes
			}
			50 = {
				hidden_tooltip = { remove_trait_silently_ambitious_effect = yes }
				add_trait_silently_content_effect = yes
			}
		}
	}
	option = {
		name = EVTOPTD_novelist1100
		random_list = {
			50 = {
				hidden_tooltip = { remove_trait_silently_humble_effect = yes }
				add_trait_proud_effect = yes
			}
			50 = {
				hidden_tooltip = { remove_trait_silently_just_effect = yes }
				add_trait_arbitrary_effect = yes
			}
		}
	}
}
character_event = {
	id = novelist.1101
	is_triggered_only = yes
	
	picture = GFX_evt_wise_woman
	border = GFX_event_normal_frame_war
	desc = novelist1101Desc
	title = novelist1100Title
	
	option = {
		name = EVTOPTA_novelist1101
		scaled_wealth = { value = -0.5 min = -10 max = -500 }
		narrative_event = { id = novelist.1110 days = 5 random = 5 tooltip = beauty_and_the_beast_lead }
	}
	option = {
		name = EVTOPTB_novelist1101
		tooltip_info = cruel
		trigger = {
			trait = cruel
		}
		narrative_event = { id = novelist.1110 days = 5 random = 5 tooltip = beauty_and_the_beast_lead }
	}
	option = {
		name = EVTOPTC_novelist1101
		tooltip_info = diplomacy
		trigger = {
			diplomacy = 15
		}
		narrative_event = { id = novelist.1110 days = 5 random = 5 tooltip = beauty_and_the_beast_lead }
	}
	option = {
		name = EVTOPTD_novelist1101
		clr_character_flag = do_not_disturb
		prestige = -50
	}
}
character_event = {
	id = novelist.1105
	is_triggered_only = yes
	
	picture = GFX_evt_hunt
	border = GFX_event_normal_frame_war
	desc = novelist1105Desc
	title = novelist1100Title
	
	option = {
		name = EVTOPTA_novelist1105
		tooltip_info = stubborn
		trigger = {
			trait = stubborn
		}
		custom_tooltip = {
			text = beauty_and_the_beast_continue_searching
			random_list = {
				50 = { character_event = { id = novelist.1106 days = 10 random = 10 } } # Fail
				50 = { narrative_event = { id = novelist.1110 days = 5 random = 15 } } # Found
			}
		}
	}
	option = {
		name = EVTOPTB_novelist1105
		tooltip_info = diligent
		trigger = {
			trait = diligent
		}
		custom_tooltip = {
			text = beauty_and_the_beast_continue_searching
			random_list = {
				50 = { character_event = { id = novelist.1106 days = 10 random = 10 } } # Fail
				50 = { narrative_event = { id = novelist.1110 days = 5 random = 15 } } # Found
			}
		}
	}
	option = {
		name = EVTOPTC_novelist1105
		tooltip_info = zealous
		trigger = {
			trait = zealous
		}
		custom_tooltip = {
			text = beauty_and_the_beast_continue_searching
			random_list = {
				50 = { character_event = { id = novelist.1106 days = 10 random = 10 } } # Fail
				50 = { narrative_event = { id = novelist.1110 days = 5 random = 15 } } # Found
			}
		}
	}
	option = {
		name = EVTOPTD_novelist1105
		clr_character_flag = do_not_disturb
		if = {
			limit = { NOT = { trait = depressed } }
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}
	}
}
character_event = {
	id = novelist.1106
	is_triggered_only = yes
	
	picture = GFX_evt_hunt
	border = GFX_event_normal_frame_war
	desc = novelist1106Desc
	title = novelist1100Title
	
	option = {
		name = EVTOPTA_novelist1106
		clr_character_flag = do_not_disturb
		add_trait_depressed_effect = yes
	}
}
narrative_event = {
	id = novelist.1110
	is_triggered_only = yes
	
	picture = GFX_evt_mountaintop_castle_hf
	border = GFX_event_narrative_frame_war
	desc = novelist1110Desc
	title = novelist1100Title
	
	option = {
		name = EVTOPTA_novelist1110
		narrative_event = { id = novelist.1112 tooltip = EVTOPTA_novelist1110_tooltip }
	}
	option = {
		name = EVTOPTB_novelist1100
		tooltip_info = intrigue
		trigger = {
			intrigue = 18 # It's fairly high, as this will result in instant kill
		}
		narrative_event = { id = novelist.1111 tooltip = EVTOPTB_novelist1110_tooltip }
	}
	option = {
		name = EVTOPTC_novelist1110
		clr_character_flag = do_not_disturb
		random_list = {
			50 = {
				hidden_tooltip = { remove_trait_silently_trusting_effect = yes }
				add_trait_paranoid_effect = yes
			}
			50 = {
				hidden_tooltip = { remove_trait_silently_brave_effect = yes }
				add_trait_craven_effect = yes
			}
		}
	}
}
narrative_event = {
	id = novelist.1111
	is_triggered_only = yes
	
	picture = GFX_evt_shadow
	border = GFX_event_narrative_frame_war
	desc = novelist1111Desc
	title = novelist1100Title
	portrait = event_target:beast
	immediate = {
		create_beast_effect = yes
	}
	option = {
		name = EVTOPTA_novelist1111
		set_character_flag = beast_from_behind
		narrative_event = { id = novelist.1115 tooltip = beauty_and_the_beast_continue_attack }
	}
	option = {
		name = EVTOPTB_novelist1111
		clr_character_flag = do_not_disturb
		beast_vanish_effect = yes
		random_list = {
			50 = {
				hidden_tooltip = { remove_trait_silently_cruel_effect = yes }
				hidden_tooltip = { remove_trait_envious_effect = yes }
				add_trait_kind_effect = yes
			}
			50 = {
				if = {
					limit = {
						NOT = { trait = just }
					}
					add_trait = just
				}
			}
		}
	}
}
narrative_event = {
	id = novelist.1112
	is_triggered_only = yes
	
	picture = GFX_evt_mountaintop_castle_hf
	border = GFX_event_narrative_frame_war
	desc = novelist1112Desc
	title = novelist1100Title
	portrait = event_target:beast
	immediate = {
		create_beast_effect = yes
	}
	option = {
		name = EVTOPTA_novelist1112
		custom_tooltip = {
			text = beauty_and_the_beast_continue_attack
			set_character_flag = beast_duel
			save_event_target_as = combatant_1
			event_target:beast = {
				save_event_target_as = combatant_2
			}
			duel_someone_effect = yes
		}
	}
	option = {
		name = EVTOPTB_novelist1112
		tooltip_info = learning
		trigger = {
			learning = 15
		}
		narrative_event = { id = novelist.1113 tooltip = EVTOPTB_novelist1112_tooltip }
	}
	option = {
		name = EVTOPTB_novelist1112
		tooltip_info = kind
		trigger = {
			trait = kind
		}
		piety = 100
		beast_vanish_effect = yes
		clr_character_flag = do_not_disturb
	}
}
narrative_event = {
	id = novelist.1113
	is_triggered_only = yes
	
	picture = GFX_evt_accused
	border = GFX_event_narrative_frame_war
	desc = novelist1113Desc
	title = novelist1100Title
	portrait = event_target:beast
	
	option = {
		name = EVTOPTA_novelist1113
		prestige = 100
		spawn_belle_effect = yes
		beast_vanish_effect = yes
		if = {
			limit = { can_apply_cool_nickname_trigger = yes }
			give_nickname = nick_the_rhetor
		}
		clr_character_flag = do_not_disturb
	}
}
narrative_event = {
	id = novelist.1114
	is_triggered_only = yes
	
	picture = GFX_evt_dueling_knights_hf
	border = GFX_event_narrative_frame_war
	desc = novelist1114Desc
	title = novelist1100Title
	portrait = event_target:beast
	immediate = {
		set_loser_flags_and_save_opponent_effect = yes
	}
	
	option = {
		name = EVTOPTA_novelist1114
		death = {
			killer = event_target:beast
			death_reason = death_duel
		}
		clr_character_flag = is_legendary_duel
		clean_up_after_duel_effect = yes
		beast_vanish_effect = yes
	}
}
narrative_event = {
	id = novelist.1115
	is_triggered_only = yes
	
	picture = GFX_evt_dueling_knights_hf
	border = GFX_event_narrative_frame_war
	desc = {
		trigger = {
			NOT = { has_character_flag = beast_from_behind }
		}
		text = novelist1115Desc_A
	}
	desc = {
		trigger = {
			has_character_flag = beast_from_behind
		}
		text = novelist1115Desc_B
	}
	title = novelist1100Title
	portrait = event_target:beast
	immediate = {
		set_winner_flags_and_save_opponent_effect = yes
        random_list = {
        	5 = { # You will be injured somehow (flags already set)...
                bad_soldier_outcome_score = yes #Increases risk, if you are bad at this...
        	}
        	10 = { # ONLY gives the Severely Injured trait, but no maiming...        		
        		set_character_flag = severely_injured
                bad_soldier_outcome_score = yes #Increases risk, if you are bad at this...
        	}
        	20 = { # ONLY gives bruises, etc...
        		set_character_flag = mildly_injured
				good_soldier_outcome_score = yes #Increases chance, if you are good at this...
        	}
        	20 = { # You are completely safe...
				good_soldier_outcome_score = yes #Increases chance, if you are good at this...
        		set_character_flag = ignore_damage
        	}
        }
	}
	
	option = {
		name = {
			trigger = {
				NOT = { has_character_flag = beast_from_behind }
			}
			text = EVTOPTA_novelist1115_A
		}
		name = {
			trigger = {
				has_character_flag = beast_from_behind
			}
			text = EVTOPTA_novelist1115_B
		}
		if = {
			limit = {
				NOT = { has_character_flag = beast_from_behind }
			}
			prestige = 250
		}
		else = {
			prestige = 100
		}
		event_target:beast = {
			death = {
				killer = ROOT
				death_reason = death_duel
			}
		}
		
        custom_tooltip = { text = you_win_the_duel_tt }
        apply_generic_duel_victory_effect = yes

        if = { # Only add injury if you were unlucky enough to get it...
        	limit = { NOT = { has_character_flag = ignore_damage } }
        	apply_selected_duel_injury_effect = yes
        }

        add_blood_splatter_effect = yes
		
		spawn_belle_effect = yes
		add_artifact = head_of_the_beast
		if = {
			limit = { has_dlc = "Holy Fury" }
			if = {
				limit = { is_female = no }
				create_bloodline = {
					type = beast_slayer_bloodline
					inheritance = patrilineal
				}
			}
			else = {
				create_bloodline = {
					type = beast_slayer_bloodline
					inheritance = matrilineal
				}
			}
		}
		
		clr_character_flag = do_not_disturb
		clr_character_flag = beast_duel
		clr_character_flag = is_legendary_duel
		clean_up_after_duel_effect = yes
	}
}
character_event = {
	id = novelist.1116
	desc = "EVTDESCnovelist.1116"
	picture = GFX_evt_travelling_merchant
	
	trigger = {
		OR = {
			religion = novelist_reformed
			religion = novelist
		}
	}
	
	mean_time_to_happen = {
		months = 300
		modifier = {
			factor = 0.5
			trait = erudite
		}
	}
	option = {
		name = "EVTOPTAnovelist.1116"
		trigger = { 
			wealth = 50
		}
		wealth = -50
		random_list = {
			50 = {
				narrative_event = {
					id = novelist.1118	days = 3 random = 1
				}
			}
			50 = {
				narrative_event = {
					id = novelist.1117	days = 3 random = 1
				}
			}
		}
	}
	option = {
		name = "EVTOPTBnovelist.1116"
		trigger = { 
			wealth = 100
		}
		wealth = -100
		random_list = {
			40 = {
				narrative_event = {
					id = novelist.1118	days = 3 random = 1
				}
			}
			60 = {
				narrative_event = {
					id = novelist.1117	days = 3 random = 1
				}
			}
		}
	}
	option = {
		name = "EVTOPTCnovelist.1116"
		trigger = { 
			wealth = 200
		}
		wealth = -200
		random_list = {
			20 = {
				narrative_event = {
					id = novelist.1118	days = 3 random = 1
				}
			}
			80 = {
				narrative_event = {
					id = novelist.1117	days = 3 random = 1
				}
			}
		}
	}
	option = {
		name = "EVTOPTDnovelist.1116"
	}
}
character_event = {
	id = novelist.1117
	desc = "EVTDESCnovelist.1117"
	picture = GFX_evt_travelling_merchant
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			3 = {
				add_artifact = divine_comedy_1
			}
			3 = {
				add_artifact = divine_comedy_2
			}
			3 = {
				add_artifact = divine_comedy_3
			}
			3 = {
				add_artifact = promessi_sposi
			}
			3 = {
				add_artifact = il_principe
			}
			3 = {
				add_artifact = lotr_fellowship_ruined
			}
			3 = {
				add_artifact = lotr_towers_ruined
			}
			3 = {
				add_artifact = lotr_return_ruined
			}
			3 = {
				add_artifact = lotr_fellowship_novelist
			}
			3 = {
				add_artifact = lotr_towers_novelist
			}
			2 = {
				add_artifact = lotr_return_novelist
			}
			3 = {
				add_artifact = hobbit_ruined
			}
			3 = {
				add_artifact = hobbit_novelist
			}
			3 = {
				add_artifact = silmarillion_ruined
			}
			2 = {
				add_artifact = silmarillion_novelist
			}
			3 = {
				add_artifact = lion_witch_wardrobe
			}
			3 = {
				add_artifact = prince_caspian
			}
			3 = {
				add_artifact = dawn_treader
			}
			3 = {
				add_artifact = silver_chair
			}
			3 = {
				add_artifact = horse_and_boy
			}
			3 = {
				add_artifact = magician_nephew
			}
			3 = {
				add_artifact = last_battle
			}
			3 = {
				add_artifact = hunchback_notredame
			}
			3 = {
				add_artifact = three_musketeers
			}
			3 = {
				add_artifact = les_miserables
			}
			3 = {
				add_artifact = le_petite_prince
			}
			3 = {
				add_artifact = 20000_leagues
			}
			3 = {
				add_artifact = dracula_stoker
			}
			3 = {
				add_artifact = frankenstein_prometheus
			}
			3 = {
				add_artifact = phantom_of_opera
			}
			3 = {
				add_artifact = rime_of_ancient_mariner
			}
			3 = {
				add_artifact = don_quijote
			}
			3 = {
				add_artifact = jekyll_and_hyde
			}
			3 = {
				add_artifact = the_metamorphosis
			}
			1 = {
				add_artifact = cinderella
			}
			1 = {
				add_artifact = frog_prince
			}
			1 = {
				add_artifact = hansel_and_gretel
			}
			1 = {
				add_artifact = red_riding_hood
			}
			1 = {
				add_artifact = rapunzel
			}
			1 = {
				add_artifact = rumpelstiltskin
			}
			1 = {
				add_artifact = sleeping_beauty
			}
			1 = {
				add_artifact = snow_white
			}
			1 = {
				add_artifact = alice_in_wonderland
			}
		}
	}
	option = {
		name = "EVTOPTAnovelist.1117"
	}
}
character_event = {
	id = novelist.1118
	desc = "EVTDESCnovelist.1118"
	picture = GFX_evt_travelling_merchant
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTAnovelist.1118"
		prestige = -25
	}
}