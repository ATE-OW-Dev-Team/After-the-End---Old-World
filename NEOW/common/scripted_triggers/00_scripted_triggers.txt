####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait. 
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait. 
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.
#has_fair_trait_trigger				Is Fair/Groomed.
#has_ugly_trait_trigger				Is Ugly/Uncouth.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#well_treated_for_disease_trigger   Has a modifier relating to a positive treatement.
#poorly_treated_for_disease_trigger Has a modifier relating to a negative treatement.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#has_any_lifestyle_trait			Has any of the above lifestyle traits.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		trait = on_pilgrimage
		trait = pilgrim
		is_ascetic_trigger = yes
		trait = hajjaj
		trait = on_hajj
		trait = ashari
		trait = shieldmaiden
		trait = zealous
		trait = summer_queen_1_honour
		trait = summer_queen_2_honour
		trait = summer_queen_3_honour
		trait = japanese_1_honour
		trait = japanese_2_honour
		trait = japanese_3_honour
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
		trait = summer_queen_bad_honour
		trait = japanese_bad_honour
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		trait = bad_priest_christian
		trait = bad_priest_muslim
		trait = bad_priest_tengri
		trait = bad_priest_zoroastrian
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
		trait = feeble
		trait = dwarf
		trait = giant
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = has_aztec_disease
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = drunkard
		trait = gluttonous
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = horse
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##

is_smart_trigger = {
	OR = {
		trait = genius
		trait = quick
		trait = shrewd
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		trait = imbecile 
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

well_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_decent
		has_character_modifier = symptom_treatment_1
		has_character_modifier = symptom_treatment_2
		has_character_modifier = symptom_treatment_3
		has_character_modifier = symptom_treatment_4	
		has_character_modifier = successful_treatment_1
		has_character_modifier = successful_treatment_2
		has_character_modifier = successful_treatment_3
	}	
}
poorly_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_poor
		has_character_modifier = mystic_treatment_terrible
		has_character_modifier = failed_treatment_1
		has_character_modifier = failed_treatment_2
	}	
}

character_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
	}
}

has_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic

		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
	}
}


has_symptom_trigger = {
	OR = {
		trait = infection
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
	}
}

has_minor_disease_trigger = {
	OR = {
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
		trait = ill
		trait = lovers_pox
		trait = flu
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

can_abdicate_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed 
		trait = one_legged 
		trait = disfigured 
		trait = nippleless
		trait = eunuch
		trait = mangled
	}
}
is_maimed_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed 
		trait = one_legged 
		trait = disfigured 
		trait = nippleless
		trait = mangled
	}
}

has_severe_disability_trigger = {
	OR = {
		trait = infirm
		trait = mangled
		trait = inbred
		trait = blinded
		trait = incapable
		trait = maimed
	}
}

has_medium_disability_trigger = {
	OR = {
		trait = one_legged
		trait = one_handed
		trait = one_eyed
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
		trait = haemophiliac
	}
}

has_minor_disability_trigger = {
	OR = {
		trait = disfigured
		trait = eunuch
		trait = harelip
		trait = stutter
		trait = lisp
	}
}

has_disability_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_medium_disability_trigger = yes
		has_minor_disability_trigger = yes
	}
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
		trait = fecund
		trait = strong
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = stressed
		trait = depressed
		trait = barren
		trait = ill
		trait = pneumonic
		trait = leper
		trait = syphilitic
		trait = has_aztec_disease
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
	}
}

##DIPLOMACY##

has_education_diplomacy_trigger = {
	OR = {
		trait = naive_appeaser
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
	}
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	custom_tooltip = {
		text = has_martial_education_tt
		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist
		}
	}
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	OR = {
		trait = indulgent_wastrel
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
	}
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	OR = {
		trait = amateurish_plotter
		trait = flamboyant_schemer
		trait = intricate_webweaver
		trait = elusive_shadow
	}
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
		trait = faqih
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = physician
		trait = faqih
	}
}


has_any_lifestyle_trait = {
	OR = {
		has_lifestyle_diplomacy_trigger = yes
		has_lifestyle_martial_trigger = yes
		has_lifestyle_stewardship_trigger = yes
		has_lifestyle_intrigue_trigger = yes
		has_lifestyle_learning_trigger = yes
	}
}


##RELIGION##

has_crusade_trait_trigger = {
	trigger_if = {
		limit = { religion_group = muslim }
		trait = mujahid
	}
	trigger_else_if = {
		limit = { religion = druze }
		trait = mujahid
	}
	trigger_else_if = {
		limit = { religion = alawite }
		trait = mujahid
	}
	trigger_else_if = {
		limit = { can_use_christian_stuff_trigger = yes }
		trait = crusader
	}
	trigger_else_if = {
		limit = { religion_group = zoroastrian_group }
		trait = gondi_shahansha
	}
	trigger_else_if = {
		limit = { religion_group = jewish_group }
		trait = shaddai
	}
	trigger_else_if = {
		limit = { religion_openly_baltic_or_reformed_trigger = yes }
		trait = romuvas_own
	}
	trigger_else_if = {
		limit = { religion_openly_finnish_or_reformed_trigger = yes }
		trait = ukkos_shield
	}
	trigger_else_if = {
		limit = { religion_openly_hellenic_or_reformed_trigger = yes }
		trait = ares_own
	}
	trigger_else_if = {
		limit = { religion_openly_tengri_or_reformed_trigger = yes }
		trait = tengri_warrior
	}
	trigger_else_if = {
		limit = { religion_openly_moist_or_reformed_trigger = yes }
		trait = purifier
	}
	trigger_else_if = {
		limit = { religion_openly_thuyhoa_pagan_or_reformed_trigger = yes }
		trait = comet
	}
	trigger_else_if = {
		limit = { religion_openly_kaharingan_pagan_or_reformed_trigger = yes }
		trait = sandung_guardian
	}
	trigger_else_if = {
		limit = { religion_openly_shindo_or_reformed_trigger = yes }
		trait = shindo_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_neoncult_or_reformed_trigger = yes }
		trait = neoncult_crusader
	}
	trigger_else_if = {
		limit = { religion = tridemism }
		trait = tridemist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_bungan_pagan_or_reformed_trigger = yes }
		trait = jok_apois_companion
	}
	trigger_else_if = {
		limit = { religion_openly_wuist_or_reformed_trigger = yes }
		trait = immortal_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_satsana_pi_pagan_or_reformed_trigger = yes }
		trait = justiciar
	}
	trigger_else_if = {
		limit = { religion_group = indian_group }
		trait = indian_crusader
	}
	trigger_else_if = {
		limit = { 
			religion_group = esoteric
			NOR = {
				religion = summer_queen
				religion = gnostic
			}
		}
		trait = esoteric_crusader
	}
	trigger_else_if = {
		limit = { is_zarist_religion_trigger = yes }
		trait = zarist_crusader
	}
	trigger_else_if = {
		limit = { 
			is_communist_religion_trigger = yes
		}
		trait = communist_crusader
	}
	trigger_else_if = {
		limit = { is_khanist_religion_trigger = yes }
		trait = khanist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_folklorist_or_reformed_trigger = yes }
		trait = folklorist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_celtic_pagan_or_reformed_trigger = yes }
		trait = celtic_pagan_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_inuit_pagan_or_reformed_trigger = yes }
		trait = crusader_inuit
	}
	trigger_else_if = {
		limit = { religion_openly_bon_or_reformed_trigger = yes }
		trait = kailash_guardian
	}
	trigger_else_if = {
		limit = { religion_openly_lakefolk_pagan_or_reformed_trigger = yes }
		trait = lakefolk_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_starist_pagan_or_reformed_trigger = yes }
		trait = starist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_inuit_or_reformed_trigger = yes }
		trait = crusader_inuit
	}
	trigger_else_if = {
		limit = { religion_openly_novelist_or_reformed_trigger = yes }
		trait = novelist_crusader
	}
	trigger_else_if = {
		limit = { religion = summer_queen }
		trait = summer_queen_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_maunaxite_or_reformed_trigger = yes }
		trait = maunaxite_crusader
	}
	trigger_else_if = {
		limit = { is_east_communist_religion_trigger = yes }
		trait = maoist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_gnostic_trigger = yes }
		trait = gnostic_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_lakefolk_pagan_or_reformed_trigger = yes }
		trait = lakefolk_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_starist_pagan_or_reformed_trigger = yes }
		trait = starist_crusader
	}
	trigger_else_if = {
		limit = { religion_openly_inuit_or_reformed_trigger = yes }
		trait = crusader_inuit
	}
	trigger_else_if = {
		limit = { religion_openly_bon_or_reformed_trigger = yes }
		trait = kailash_guardian
	}
	trigger_else_if = {
		limit = { religion_openly_sarnaist_or_reformed_trigger = yes }
		trait = crusader_sarnaist
	}
	trigger_else = {
		religion_group = oceanic
		trait = oceanic_crusader
	}
}

####MERC LEADER/COUNCIL JOB####


#Used with character interaction to swap council job. DO NOT REMOVE
change_council_job_potential_trigger = {
	liege = { character = FROM }
	NOT = {
		AND = {
			has_job_title = job_spiritual
			liege = { religion_group = muslim }
			religion = FROM
		}
	}
	OR = {
		AND = {
			OR = {
				has_minor_title = title_councilmember_king
				has_minor_title = title_councilmember_emperor
			}
			OR = {
				can_be_chancellor_trigger = yes
				can_be_marshal_trigger = yes
				can_be_treasurer_trigger = yes
				can_be_spymaster_trigger = yes
				AND = {
					can_be_spiritual_trigger = yes
					ROOT = { NOT = { religion_group = muslim } }
				}
			}
		}
		AND = {
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_marshal
				has_job_title = job_treasurer
				has_job_title = job_spymaster
				has_job_title = job_spiritual
			}
			liege = {
				OR = {
					job_chancellor = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_marshal = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_treasurer = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spymaster = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spiritual = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
				}
			}
		}
	}
}

can_be_chancellor_trigger = {
	OR = {
		AND = {
			OR = {
				can_hold_council_trigger = yes
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
						
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_chancellor
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_marshal_trigger = {
	OR = {
		AND = {
			OR = {
				can_hold_council_trigger = yes
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_treasurer_trigger = {
	OR = {
		AND = {
			OR = {
				can_hold_council_trigger = yes
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_treasurer
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spymaster_trigger = {
	OR = {
		AND = {
			OR = {
				can_hold_council_trigger = yes
				liege = { 
					NOR = {
						liege = { has_religion_feature = religion_matriarchal } 
						liege = { has_religion_feature = religion_patriarchal } 
					}
					OR = {
						mother = { character = ROOT }
						any_spouse = { character = ROOT }
					}
				}
				AND = {
					religion_group = pagan_group
					liege = {
						religion_group = pagan_group
						NOR = {
							liege = { has_religion_feature = religion_matriarchal } 
							liege = { has_religion_feature = religion_patriarchal } 
						}
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
						
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_spymaster
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spiritual_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}

	liege = {
		religion = ROOT
	}
	OR = {
		AND = {
			is_adult = yes
			OR = {
				is_female = no
				religion_allows_female_temple_holders = yes
				has_religion_feature = religion_matriarchal
			}
			OR = {
				is_female = yes
				religion_allows_male_temple_holders = yes
				has_religion_feature = religion_patriarchal
			}
			OR = {
				NOR = {
					religion = agamatirta
					religion = old_hindu
					religion = parabrahmanist
					religion = kalikula
					religion = shaivasiddhanta
					religion = jain
					religion = maunaxite_reformed
					religion = maunaxite
				}
				trait = brahmin
				is_ascetic_trigger = yes
			}
			OR = {
				NOR = {
					religion = yazidi
					religion = yersenism
					religion = mandaeanism
					religion = ahlehaqq
				}
				trait = pyir
				is_ascetic_trigger = yes
			}
		}
		has_character_flag = special_spiritual
	}
	
	OR = {
		is_theocracy = yes
		AND = {
			liege = { is_tribal = yes }
			is_ruler = no
		}
		liege = { religion_group = muslim }
		AND = {
			clan = yes
			liege = {
				is_nomadic = yes
			}
		}
		AND = {
			has_autocephaly = no
			is_ruler = no
		}
		AND = {
			has_autocephaly = yes
			is_ruler = no
			NOT = {
				any_vassal = { is_theocracy = yes }
			}
		}
	}
	
	OR = {
		NOT = { religion_group = muslim }
		NOT = { liege = { religion_group = muslim } }
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
		has_character_flag = special_spiritual
	}
}

can_be_councilmember_king_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				modifier = opinion_resigned_from_council 
				who = ROOT
			}
		} 
	}
	AND = {
		OR = {
			can_hold_council_trigger = yes
			AND = {
				is_female = yes
				liege = {
					primary_title = {
						OR = {
							has_law = status_of_women_1
							has_law = status_of_women_2
							has_law = status_of_women_3
						}
					}
				}
				is_landed = yes
			}
		}
		is_adult = yes
	}
}

can_be_councilmember_emperor_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
	OR = {
		AND = {
			OR = {
				can_hold_council_trigger = yes
				AND = {
					is_female = yes
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					is_landed = yes
				}
			}
			is_adult = yes
		}
	}
}

is_inaccessible_trigger = { #Remember to write this "is_inaccessible_trigger = no" when scripting, or the tooltip will be messed up (it reads "Is NOT in Hiding, in Seclusion, or out traveling")
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				has_character_flag = flag_holding_great_tribal_festival
				trait = in_hiding
				trait = on_hajj
				trait = on_pilgrimage
				trait = on_indian_pilgrimage
				trait = kow_tow_travels
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when ROOT is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
	}
}

prev_attraction_trigger = {
	#Returns yes when PREV is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			PREV = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			PREV = { prefers_men_trigger = yes }
		}
	}
}

#included both attacked and attracted because of weird usage of both
attracted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

attracted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		immortal = yes
		trait = possible_reincarnation_of_god
		trait = real_reincarnation_of_god
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
	}
	ai = yes
}

# Very usable! If poorly named
block_general_event_trigger = {
	OR = {	
		is_adult = no
		trait = incapable
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
	}
}

gender_equality_trigger = {
	OR = {
		is_equalist_religion = yes
		AND = {
			is_landed = yes
			primary_title = { 
				has_law = status_of_women_4 
			}
		}
		AND = {
			is_landed = no
			liege = { primary_title = { has_law = status_of_women_4 } }
		}
	}
}

male_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = no
		custom_tooltip = {
			text = tooltip_not_matriarchal_liege_religion_feature
			NOR = {
				has_religion_feature = religion_matriarchal
				liege = {
					has_religion_feature = religion_matriarchal
				}
			}
		}
	}
}

female_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			custom_tooltip = {
				text = tooltip_feminist_liege_ATE_OW_religion
				OR = {
					AND = {
						is_feminist_religion = yes
						liege = { is_feminist_religion = yes }
					}
					liege = { has_religion_feature = religion_matriarchal }
				}
			}
			primary_title = {
				OR = {
					has_law = status_of_women_4 
					has_law = status_of_women_3 
				}
			}
			liege = {
				primary_title = {
					OR = {
						has_law = status_of_women_4
						has_law = status_of_women_3
					}
				}
			}
		}
	}
}

female_can_hold_minor_commander_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			has_character_flag = special_marshal
			AND = {
				trait = shieldmaiden
				liege = { religion = ROOT }
			}
			AND = {
				is_member_of_any_warrior_lodge_trigger = yes
				liege = { religion = ROOT }
			}
			custom_tooltip = {
				text = tooltip_feminist_liege_ATE_OW_religion
				OR = {
					AND = {
						is_feminist_religion = yes
						liege = { is_feminist_religion = yes }
					}
					liege = { has_religion_feature = religion_matriarchal }
				}
			}
			primary_title = {
				has_law = status_of_women_4 
			}
			liege = {
				primary_title = {
					has_law = status_of_women_4
				}
			}
		}
	}
}

#Has same education as prev?
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
	}
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

is_widow_or_widower_trigger = {
	is_married = no
	any_spouse_even_if_dead = {
		always = yes
	}
}

###Use the actual is_<family member>_of = scope triggers now
family_of_root_trigger = { #use is_blood_relative_of_root_trigger for all relatives
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

sibling_in_law_of_prev_trigger = {
	OR = {
		any_sibling_even_if_dead = { any_spouse_even_if_dead = { character = PREVPREVPREV } }
		any_spouse_even_if_dead = { any_sibling_even_if_dead = { character = PREVPREVPREV } }
	}
}

sibling_in_law_of_event_target_1_trigger = {
	OR = {
		any_sibling_even_if_dead = { any_spouse_even_if_dead = { character = event_target:event_target_1 } }
		any_spouse_even_if_dead = { any_sibling_even_if_dead = { character = event_target:event_target_1 } }
	}
}

sibling_in_law_of_event_target_2_trigger = {
	OR = {
		any_sibling_even_if_dead = { any_spouse_even_if_dead = { character = event_target:event_target_2 } }
		any_spouse_even_if_dead = { any_sibling_even_if_dead = { character = event_target:event_target_2 } }
	}
}

sibling_in_law_of_event_target_3_trigger = {
	OR = {
		any_sibling_even_if_dead = { any_spouse_even_if_dead = { character = event_target:event_target_3 } }
		any_spouse_even_if_dead = { any_sibling_even_if_dead = { character = event_target:event_target_3 } }
	}
}

sibling_in_law_of_event_target_4_trigger = {
	OR = {
		any_sibling_even_if_dead = { any_spouse_even_if_dead = { character = event_target:event_target_4 } }
		any_spouse_even_if_dead = { any_sibling_even_if_dead = { character = event_target:event_target_4 } }
	}
}

relative_in_law_of_prev_trigger = {
	any_child = { is_married = PREVPREV }
}

relative_in_law_of_event_target_1_trigger = {
	any_child = { is_married = event_target:event_target_1 }
}

relative_in_law_of_event_target_2_trigger = {
	any_child = { is_married = event_target:event_target_2 }
}

relative_in_law_of_event_target_3_trigger = {
	any_child = { is_married = event_target:event_target_3 }
}

relative_in_law_of_event_target_4_trigger = {
	any_child = { is_married = event_target:event_target_4 }
}
cousin_of_root_trigger = {
	is_cousin_of = ROOT
}

sibling_of_root_trigger = {
	sibling = ROOT
}

sibling_child_of_root_trigger = {
	is_nibling_of = ROOT
}

parent_sibling_of_root_trigger = {
	is_aunt_uncle_of = ROOT
}

grandchild_of_root_trigger = {
	is_grandchild_of = ROOT
}

sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		any_spouse = { mother_even_if_dead = { any_child = { character = ROOT } } }
		any_spouse = { father_even_if_dead = { any_child = { character = ROOT } } }
	}
}

relative_in_law_of_root_trigger = {
	OR = {
		any_child = { any_spouse = { character = ROOT } }
		#any_spouse = { mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
		#any_spouse = { father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
	}
}

interesting_face_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = ugly
		trait = uncouth
		has_scarred_trait_trigger = yes
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
	}
}

is_rich_holding = {
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_3
			has_building = ca_keep_4
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_3
			has_building = ca_town_4
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_3
			has_building = tp_monastery_4
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_3
			has_building = tp_town_4
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_3
		has_building = ct_marketplace_4
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

	}
}
is_richer_holding = {
	
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6
	}
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}

has_positive_congenital_trigger = {
    OR = {
        trait = strong
        trait = fair
        trait = quick
        trait = genius
        trait = fecund
    }
}

has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
		trait = barren
		trait = haemophiliac
	}
}

is_ascetic_trigger = {
	custom_tooltip = {
		text = is_ascetic_tooltip
		OR = {
			trait = monk
			trait = nun
			trait = muni
			trait = aryika
			trait = bhikkhu
			trait = bhikkhuni
			trait = sanyasi
			trait = sanyasini
		}
	}
}
is_not_ascetic_trigger = {
	custom_tooltip = {
		text = is_not_ascetic
		NOR = {
			trait = monk
			trait = nun
			trait = muni
			trait = aryika
			trait = bhikkhu
			trait = bhikkhuni
			trait = sanyasi
			trait = sanyasini
		}
	}
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes } 
		}
	}
}

is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	attacted_to_root_trigger = yes
	OR = {
		opinion = { who = ROOT value = 45 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	root_attraction_trigger = yes
	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
}

looting_artifact_event_religious_artifacts_trigger = {
	FROM = {
		any_artifact = {
			has_artifact_flag = looted_artifact_tooltip_1
			has_artifact_flag = religious
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = catholic
				ROOT = { religion = catholic }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = fraticelli
				ROOT = { religion = fraticelli }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = orthodox
				ROOT = { religion = orthodox }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = paulician
				ROOT = { religion = paulician }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = sunni
				ROOT = { religion = sunni }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = yazidi
				ROOT = { religion = yazidi }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = shiite
				ROOT = { religion = shiite }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = druze
				ROOT = { religion = druze }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = ibadi
				ROOT = { religion = ibadi }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = jewish
				ROOT = { religion = jewish }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = zoroastrian
				ROOT = { religion = zoroastrian }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = mazdaki
				ROOT = { religion = mazdaki }
			}
		}
		#NAND = {
		#	any_artifact = {
		#		has_artifact_flag = looted_artifact_tooltip_1
		#		has_artifact_flag = manichean
		#		ROOT = { religion = manichean }
		#	}
		#}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = bon
				ROOT = { OR = { religion = bon religion = bon_reformed } }
			}
		}
		#NAND = {
		#	any_artifact = {
		#		has_artifact_flag = looted_artifact_tooltip_1
		#		has_artifact_flag = taoist
		#		ROOT = { religion = taoist }
		#	}
		#}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = buddhist
				ROOT = { religion_group = buddhist_group }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = jain
				ROOT = { religion = jain }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = baltic_pagan
				ROOT = { OR = { religion = baltic_pagan religion = baltic_pagan_reformed } }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = finnish_pagan
				ROOT = { OR = { religion = finnish_pagan religion = finnish_pagan_reformed } }
			}
		}
		#NAND = {
		#	any_artifact = {
		#		has_artifact_flag = looted_artifact_tooltip_1
		#		has_artifact_flag = tengri_pagan
		#		ROOT = { OR = { religion = tengri_pagan religion = tengri_pagan_reformed } }
		#	}
		#}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = hellenic_pagan
				ROOT = { OR = { religion = hellenic_pagan religion = hellenic_pagan_reformed } }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = pagan
				ROOT = { religion = pagan }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = christian
				ROOT = { religion_group = christian }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = muslim
				ROOT = { religion_group = muslim }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = pagan_group
				ROOT = { religion_group = pagan_group }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = zoroastrian_group
				ROOT = { religion_group = zoroastrian_group }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = jewish_group
				ROOT = { religion_group = jewish_group }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = indian_group
				ROOT = { religion_group = indian_group }
			}
		}
	}
}

has_bottom_tier_education_trait_trigger = {
	OR = {
		trait = naive_appeaser
		trait = misguided_warrior
		trait = indulgent_wastrel
		trait = amateurish_plotter
		trait = detached_priest
	}
}

has_2nd_tier_education_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = tough_soldier
		trait = thrifty_clerk
		trait = flamboyant_schemer
		trait = martial_cleric
	}
}

has_3rd_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {	
			OR = {
				trait = charismatic_negotiator
				trait = skilled_tactician
				trait = fortune_builder
				trait = intricate_webweaver
				trait = scholarly_theologian
			}
		}
	}
}

has_top_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {
			OR = {
				trait = elusive_shadow
				trait = grey_eminence
				trait = midas_touched
				trait = brilliant_strategist
				trait = mastermind_theologian
			}
		}
	}
}

has_medium_education_trait_trigger = {
	OR = {
		has_2nd_tier_education_trait_trigger = yes
		has_3rd_tier_education_trait_trigger = yes
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }	
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }	
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }	
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }	
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
	}
}

is_blood_relative_of_root_trigger = {
	OR = {
		is_ancestor_of = ROOT
		is_descendant_of = ROOT
		sibling = ROOT
		is_cousin_of = ROOT
		is_aunt_uncle_of = ROOT
		is_nibling_of = ROOT
		dynasty = ROOT
	}
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
		trait = tribal_kinslayer
	}
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

proselytize_convert_independent_trigger = {
	owner = {
		OR = { 
			FROM = { 
				NOR = { 
					religion_group = pagan_group 
					religion_group = jewish_group 
					religion = mandaeanism
					religion = druze
					religion = alawite
					religion = ironist
					religion = khanist
					religion = zarist
					religion = katerinist
					religion = orleanist
					religion = petrist
					religion = voodun
					religion = vagarna
					religion = bushism
				} 
			} 
			FROM = { has_religion_feature = religion_proselytizing }
		}
		independent = yes
		NOT = { religion = FROM }
		OR = {
			AND = {
				religion_group = pagan_group
				NOR = {
					religion = sanamahist
					religion = kiratist
					religion = donyipolo
				}
			}
			religion_group = oceanic
			religion = ironist
			religion = khanist
			religion = zarist
			religion = katerinist
			religion = orleanist
			religion = petrist
			religion = voodun
			religion = vagarna
			religion = bushism
		}
		year = 2850
		is_reformed_religion = no
		capital_scope = {
			province = ROOT
		}
		controls_religion = no
		FROM = {
			higher_tier_than = COUNT
			OR = {
				independent = yes
				higher_tier_than = DUKE
			}
		}
		NOT = {
			has_opinion_modifier = { who = FROM modifier = opinion_sent_preacher }
		}
		is_within_diplo_range = FROM
	}
}

is_toddler_age_trigger = {
	age = 0
 	NOT = { age = 4 }
}

is_young_child_age_trigger = {
	age = 4
 	NOT = { age = 9 }
}

is_child_age_trigger = {
	age = 9
 	NOT = { age = 12 }
}

is_adolescent_age_trigger = {
	age = 12
 	NOT = { age = 17 }
}

is_teenager_age_trigger = {
	age = 13
 	NOT = { age = 20 }
}

is_grown_up_age_trigger = {
	age = 20
}

is_middle_aged_trigger = {
	age = 40
	NOT = { age = 65 }
}

is_senior_age_trigger = {
	age = 50
}

is_elder_age_trigger = {
	age = 70
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_terrible_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_terrible_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	OR = {
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 8 } } #15 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 14 } } #25 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 20 } } #40 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
		}
	}
}

has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt
		hidden_trigger = {
			OR = {
				government = tribal_government
				government = nomadic_government
			}
		}
	}
}


has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_cupbearer
		has_minor_title = title_commander
	}
}


#returns true if scoped character already dislikes ROOT (while not being caught up in a friendship or love, and such)
potentially_interested_in_rivaling_root_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { opinion = { who = ROOT value = -25 } }
		this_has_terrible_opinion_modifier_of_root_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}
#returns true if scoped character is already disliked by ROOT (while not being caught up in a friendship or love, and such)
root_potentially_interested_in_rivaling_this_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { reverse_opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { reverse_opinion = { who = ROOT value = -25 } }
		root_has_terrible_opinion_modifier_of_this_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_rivals_trigger = {
	potentially_interested_in_rivaling_root_trigger = yes
	root_potentially_interested_in_rivaling_this_trigger = yes
}

# Checks whether the current scope has one of the following opinion modifiers against PREV
this_has_friendly_opinion_modifier_of_prev_trigger = {
	OR = {
		has_opinion_modifier = { who = PREV name = opinion_budding_friendship }
		has_opinion_modifier = { who = PREV name = opinion_was_praised }
		has_opinion_modifier = { who = PREV name = opinion_charmed }
		has_opinion_modifier = { who = PREV name = opinion_honorable }
		has_opinion_modifier = { who = PREV name = opinion_was_rewarded }
		has_opinion_modifier = { who = PREV name = nice_adventure }
		has_opinion_modifier = { who = PREV name = great_adventure }
		has_opinion_modifier = { who = PREV name = epic_adventure }
		has_opinion_modifier = { who = PREV name = opinion_accomplice }
		has_opinion_modifier = { who = PREV name = opinion_mediator }
		has_opinion_modifier = { who = PREV name = opinion_poet_pen_pal }
		has_opinion_modifier = { who = PREV name = opinion_calmed }
		has_opinion_modifier = { who = PREV name = opinion_cheered_up }
		has_opinion_modifier = { who = PREV name = opinion_teach_virtue }
		has_opinion_modifier = { who = PREV name = opinion_no_cat }
		has_opinion_modifier = { who = PREV name = opinion_feels_appreciated }
		has_opinion_modifier = { who = PREV name = opinion_amused }
		has_opinion_modifier = { who = PREV name = opinion_swayed_3 }
	}
}

# Checks whether PREV has one of the following opinion modifiers against the currently scoped character
prev_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV name = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = PREV name = opinion_was_praised }
		reverse_has_opinion_modifier = { who = PREV name = opinion_charmed }
		reverse_has_opinion_modifier = { who = PREV name = opinion_honorable }
		reverse_has_opinion_modifier = { who = PREV name = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = PREV name = nice_adventure }
		reverse_has_opinion_modifier = { who = PREV name = great_adventure }
		reverse_has_opinion_modifier = { who = PREV name = epic_adventure }
		reverse_has_opinion_modifier = { who = PREV name = opinion_accomplice }
		reverse_has_opinion_modifier = { who = PREV name = opinion_mediator }
		reverse_has_opinion_modifier = { who = PREV name = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = PREV name = opinion_calmed }
		reverse_has_opinion_modifier = { who = PREV name = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = PREV name = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = PREV name = opinion_no_cat }
		reverse_has_opinion_modifier = { who = PREV name = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = PREV name = opinion_amused }
		reverse_has_opinion_modifier = { who = PREV name = opinion_swayed_3 }
	}
}

# Checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_friendly_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT name = opinion_budding_friendship }
		has_opinion_modifier = { who = ROOT name = opinion_was_praised }
		has_opinion_modifier = { who = ROOT name = opinion_charmed }
		has_opinion_modifier = { who = ROOT name = opinion_honorable }
		has_opinion_modifier = { who = ROOT name = opinion_was_rewarded }
		has_opinion_modifier = { who = ROOT name = nice_adventure }
		has_opinion_modifier = { who = ROOT name = great_adventure }
		has_opinion_modifier = { who = ROOT name = epic_adventure }
		has_opinion_modifier = { who = ROOT name = opinion_accomplice }
		has_opinion_modifier = { who = ROOT name = opinion_mediator }
		has_opinion_modifier = { who = ROOT name = opinion_poet_pen_pal }
		has_opinion_modifier = { who = ROOT name = opinion_calmed }
		has_opinion_modifier = { who = ROOT name = opinion_cheered_up }
		has_opinion_modifier = { who = ROOT name = opinion_teach_virtue }
		has_opinion_modifier = { who = ROOT name = opinion_no_cat }
		has_opinion_modifier = { who = ROOT name = opinion_feels_appreciated }
		has_opinion_modifier = { who = ROOT name = opinion_amused }
		has_opinion_modifier = { who = ROOT name = opinion_swayed_3 }
	}
}

# Checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT name = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_was_praised }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_charmed }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_honorable }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = ROOT name = nice_adventure }
		reverse_has_opinion_modifier = { who = ROOT name = great_adventure }
		reverse_has_opinion_modifier = { who = ROOT name = epic_adventure }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_accomplice }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_mediator }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_calmed }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_no_cat }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_amused }
		reverse_has_opinion_modifier = { who = ROOT name = opinion_swayed_3 }
	}
}
#returns true if scoped character already likes ROOT
potentially_platonically_interested_in_root_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	opinion = { who = ROOT value = 10 }
	this_has_terrible_opinion_modifier_of_root_trigger = no

	OR = {
		opinion = { who = ROOT value = 45 }
		this_has_friendly_opinion_modifier_of_root_trigger = yes
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if ROOT has this opinion of current scope
	}
}

#returns true if scoped character is already liked by ROOT
root_potentially_platonically_interested_in_this_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	root_has_terrible_opinion_modifier_of_this_trigger = no

	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		root_has_friendly_opinion_modifier_of_this_trigger = yes
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if current scope has this opinion of current ROOT
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_friendlies_trigger = {
	potentially_platonically_interested_in_root_trigger = yes
	root_potentially_platonically_interested_in_this_trigger = yes
}

has_fat_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_fat_for_gluttony 
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family 
		has_character_flag = flag_fat_for_content 
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_malnourished_for_temperance 
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia 
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

is_healthy_for_travel_trigger = {
	custom_tooltip = {
		text = health_travel_condition

		is_incapable = no
		has_epidemic_disease_trigger = no

		NOR = {
			trait = blinded
			trait = pregnant
		}
	}
}

is_child_or_sibling_of_from_trigger = {
	custom_tooltip = {
		text = is_child_or_sibling_of_yours_tt
		OR = {
			is_child_of = FROM
			sibling = FROM
		}
	}
}

this_has_terrible_opinion_modifier_of_root_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}
root_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

ruler_has_dedicated_temple_trigger = {
	OR = {
		has_character_modifier = dedicated_to_zeus
		has_character_modifier = dedicated_to_poseidon
		has_character_modifier = dedicated_to_hades
		has_character_modifier = dedicated_to_hermes
		has_character_modifier = dedicated_to_demeter
		has_character_modifier = dedicated_to_athena
		has_character_modifier = dedicated_to_apollo
		has_character_modifier = dedicated_to_arthemis
		has_character_modifier = dedicated_to_ares
		has_character_modifier = dedicated_to_aphrodite
		has_character_modifier = dedicated_to_ephaestus
		has_character_modifier = dedicated_to_hestia
	}
}

can_build_hillfort_trigger = {
						OR = { 
							AND = { 
										NOR = { 
											is_building = tb_hillfort_1 
											has_building = tb_hillfort_1 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_1
										NOR = { 
											is_building = tb_hillfort_2 
											has_building = tb_hillfort_2 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_2
										NOR = { 
											is_building = tb_hillfort_3 
											has_building = tb_hillfort_3 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
							}
							AND = { 
										has_building = tb_hillfort_3
										NOR = { 
												is_building = tb_hillfort_4 
												has_building = tb_hillfort_4 
											}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
							}
						}
}
can_build_defensive_fortifications_trigger = {
						holding_type = tribal
						hidden_tooltip = { 
							NOR = { 
								is_building = tb_defensive_fortifications_4
								has_building = tb_defensive_fortifications_4
							}
						}
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_1
									hidden_tooltip = { 
										NOR = { 
											is_building = tb_defensive_fortifications_1 
											has_building = tb_defensive_fortifications_1
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_2 
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_1
										NOR = { 
											is_building = tb_defensive_fortifications_2 
											has_building = tb_defensive_fortifications_2 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_3
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_2
										NOR = { 
											is_building = tb_defensive_fortifications_3 
											has_building = tb_defensive_fortifications_3 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_4
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_3
										NOR = { 
											is_building = tb_defensive_fortifications_4 
											has_building = tb_defensive_fortifications_4 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
									}
								}
							}
						}
}
can_build_walls_trigger = {
						holding_type = castle
						hidden_tooltip = { NOT = { has_building = ca_wall_5 } }
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_1
									hidden_tooltip = { 
										NOR = { 
											is_building = ca_wall_1 
											has_building = ca_wall_1
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_2
									hidden_tooltip = { 
										has_building = ca_wall_1
										NOR = { 
											is_building = ca_wall_2 
											has_building = ca_wall_2
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 2 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_3
									hidden_tooltip = { 
										has_building = ca_wall_2
										NOR = { 
											is_building = ca_wall_3 
											has_building = ca_wall_3
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 4 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_4
									hidden_tooltip = { 
										has_building = ca_wall_3
										NOR = { 
											is_building = ca_wall_4 
											has_building = ca_wall_4
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 6 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_5
									hidden_tooltip = { 
										has_building = ca_wall_4
										NOR = { 
											is_building = ca_wall_5 
											has_building = ca_wall_5
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 8 }
									}
								}
							}
						}
}
can_build_castle_fortifications_trigger = {
						holding_type = castle
						hidden_tooltip = { 
							NOR = { 
								is_building = ca_wall_q_5
								has_building = ca_wall_q_5
							}
						}
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_1
									hidden_tooltip = { 
										NOR = { 
											is_building = ca_wall_q_1
											has_building = ca_wall_q_1
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_2
									hidden_tooltip = { 
										has_building = ca_wall_q_1
										NOR = { 
											is_building = ca_wall_q_2 
											has_building = ca_wall_q_2
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 1 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_3
									hidden_tooltip = { 
										has_building = ca_wall_q_2
										NOR = { 
											is_building = ca_wall_q_3 
											has_building = ca_wall_q_3
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 3 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_4
									hidden_tooltip = { 
										has_building = ca_wall_q_3
										NOR = { 
											is_building = ca_wall_q_4 
											has_building = ca_wall_q_4 
										}
									}
								}
								location = { TECH_FORTIFICATIONS_CONSTRUCTION = 5 }
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_5
									hidden_tooltip = { 
										has_building = ca_wall_q_4
										NOR = { 
											is_building = ca_wall_q_5 
											has_building = ca_wall_q_5
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 7 }
									}
								}
							}
						}
}

personal_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
	}
}

family_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

no_grievance_trigger = {
	NOR = {
		personal_grievance_trigger = yes
		family_grievance_trigger = yes
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {  
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

lower_educational_trait_trigger = {
	OR = {
		AND = {
			trait = naive_appeaser
			ROOT = {
				OR = {
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = underhanded_rogue 
			ROOT = {
				OR = {
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = charismatic_negotiator
			ROOT = {
				trait = grey_eminence
			}
		}
		AND = {
			trait = misguided_warrior
			ROOT = {
				OR = {
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = tough_soldier
			ROOT = {
				OR = {
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = skilled_tactician
			ROOT = {
				trait = brilliant_strategist
			}
		}
		AND = {
			trait = indulgent_wastrel
			ROOT = {
				OR = {
					trait = thrifty_clerk
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = thrifty_clerk
			ROOT = {
				OR = {
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = fortune_builder
			ROOT = {
				trait = midas_touched
			}
		}
		AND = {
			trait = amateurish_plotter
			ROOT = {
				OR = {
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = flamboyant_schemer
			ROOT = {
				OR = {
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = intricate_webweaver
			ROOT = {
				trait = elusive_shadow
			}
		}
		AND = {
			trait = detached_priest
			ROOT = {
				OR = {
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = martial_cleric
			ROOT = {
				OR = {
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = scholarly_theologian
			ROOT = {
				trait = mastermind_theologian
			}
		}
	}
}

has_scarred_trait_trigger = {
	OR = {  
		trait = scarred
		trait = scarred_mid
		trait = scarred_high
	}
}

this_is_warrior_culture_trigger = { #Not really about culture - Used in AI voting logic.
	NOT = { pacifist = yes }
	OR = { 
		religion_group = muslim
		religion_group = oceanic
		is_khanist_religion_trigger = yes
		religion = akjang
		is_ironist_religion_trigger = yes
		religion = hellenic_pagan
		religion = maunaxite
		religion = purge
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes
		#government = military_government
		AND = { 
			NOT = { has_dlc = "Holy Fury"}
			religion = hellenic_pagan_reformed
		}
		AND = {
			NOT = { has_dlc = "Holy Fury"}
			religion = maunaxite_reformed
		}
	}
}

this_is_diplomatic_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	} 
	OR = { 
		religion_group = christian
		religion_group = jewish_group
		religion_group = zoroastrian_group
		religion_group = syncratic_group
		is_jacobinist_religion_trigger = yes
		is_esoteric_religion_trigger = yes
		is_zarist_religion_trigger = yes
		is_communist_religion_trigger = yes
		has_religion_feature = religion_cosmopolitan
		religion = novelist
		AND = { 
			NOT = { has_dlc = "Holy Fury"}
			religion = novelist_reformed
		}
	}
}
this_is_spiritual_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		religion_group = indian_group
		religion_group = buddhist_group
		has_religion_feature = religion_peaceful
		religion = bahai
	}
}
this_is_sea_raider_trigger = {
	OR = { 
		trait = pirate
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
	}
}

#Sex restrictions on Great Tribal Festival activities.
can_enter_festival_physical_competitions_trigger = {
	is_adult = yes
	OR = {
		AND = {
			is_female = no
			OR = { 
				NOT = { has_religion_feature = religion_matriarchal }
				is_member_of_any_warrior_lodge_trigger = yes
				has_character_flag = special_marshal
			}
		}
		AND = {
			is_female = yes
			OR = { 
				trait = shieldmaiden
				has_religion_feature = religion_matriarchal 
				has_character_flag = special_marshal
				is_member_of_any_warrior_lodge_trigger = yes
			}
		}
	}
}

has_at_least_3_traits_in_common_with_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = chaste }
		}
		AND = {
			trait = temperate
			PREV = { trait = temperate }
		}
		AND = {
			trait = charitable
			PREV = { trait = charitable }
		}
		AND = {
			trait = diligent
			PREV = { trait = diligent }
		}
		AND = {
			trait = patient
			PREV = { trait = patient }
		}
		AND = {
			trait = kind
			PREV = { trait = kind }
		}
		AND = {
			trait = humble
			PREV = { trait = humble }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = lustful }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = greedy
			PREV = { trait = greedy }
		}
		AND = {
			trait = slothful
			PREV = { trait = slothful }
		}
		AND = {
			trait = envious
			PREV = { trait = envious }
		}
		AND = {
			trait = wroth
			PREV = { trait = wroth }
		}
		AND = {
			trait = proud
			PREV = { trait = proud }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = ambitious }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = brave
			PREV = { trait = brave }
		}
		AND = {
			trait = content
			PREV = { trait = content }
		}
		AND = {
			trait = craven
			PREV = { trait = craven }
		}
		AND = {
			trait = cruel
			PREV = { trait = cruel }
		}
		AND = {
			trait = cynical
			PREV = { trait = cynical }
		}
		AND = {
			trait = deceitful
			PREV = { trait = deceitful }
		}
		AND = {
			trait = erudite
			PREV = { trait = erudite }
		}
		AND = {
			trait = gregarious
			PREV = { trait = gregarious }
		}
		AND = {
			trait = honest
			PREV = { trait = honest }
		}
		AND = {
			trait = just
			PREV = { trait = just }
		}
		AND = {
			trait = paranoid
			PREV = { trait = paranoid }
		}
		AND = {
			trait = shy
			PREV = { trait = shy }
		}
		AND = {
			trait = stubborn
			PREV = { trait = stubborn }
		}
		AND = {
			trait = trusting
			PREV = { trait = trusting }
		}
		AND = {
			trait = zealous
			PREV = { trait = zealous }
		}
	}
}

has_at_least_3_traits_opposite_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = lustful }
		}
		AND = {
			trait = temperate
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = charitable
			PREV = { trait = greedy }
		}
		AND = {
			trait = diligent
			PREV = { trait = slothful }
		}
		AND = {
			trait = patient
			PREV = { trait = wroth }
		}
		AND = {
			trait = kind
			PREV = {
				OR = {
					trait = envious
					trait = cruel
				}
			}
		}
		AND = {
			trait = humble
			PREV = { trait = proud }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = chaste }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = temperate }
		}
		AND = {
			trait = greedy
			PREV = { trait = charitable }
		}
		AND = {
			trait = slothful
			PREV = { trait = diligent }
		}
		AND = {
			OR = {
				trait = envious
				trait = cruel
			}
			PREV = { trait = kind }
		}
		AND = {
			trait = wroth
			PREV = { trait = patient }
		}
		AND = {
			trait = proud
			PREV = { trait = humble }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = content }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = just }
		}
		AND = {
			trait = brave
			PREV = { trait = craven }
		}
		AND = {
			trait = content
			PREV = { trait = ambitious }
		}
		AND = {
			trait = craven
			PREV = { trait = brave }
		}
		AND = {
			trait = cynical
			PREV = { trait = zealous }
		}
		AND = {
			trait = deceitful
			PREV = { trait = honest }
		}
		AND = {
			trait = gregarious
			PREV = { trait = shy }
		}
		AND = {
			trait = honest
			PREV = { trait = deceitful }
		}
		AND = {
			trait = just
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = paranoid
			PREV = { trait = trusting }
		}
		AND = {
			trait = shy
			PREV = { trait = gregarious }
		}
		AND = {
			trait = trusting
			PREV = { trait = paranoid }
		}
		AND = {
			trait = zealous
			PREV = { trait = cynical }
		}
	}
}

has_any_sympathy_trait_trigger = { 
	OR = {
		trait = sympathy_christendom
		trait = sympathy_islam
		trait = sympathy_pagans
		trait = sympathy_zoroastrianism
		trait = sympathy_judaism
		trait = sympathy_indian
		trait = sympathy_syncratic
		trait = sympathy_old_world_cultist
		trait = sympathy_oceanic
		trait = sympathy_buddhism
		trait = sympathy_esoteric
		trait = sympathy_alien
		trait = sympathy_synth
		trait = sympathy_chinese
		trait = sympathy_shinto
	}
}

preferred_gender_based_on_laws_trigger = {
	OR = {
		AND = {
			is_female = no
			PREV = {
				OR = {
					has_law = cognatic_succession
					has_law = agnatic_succession
				}
			}
		}
		PREV = { has_law = true_cognatic_succession }
		AND = {
			is_female = yes
			PREV = {
				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}
	}
}

has_bad_priest_trait_trigger = {
	OR = {
		trait = bad_priest_christian
		trait = bad_priest_muslim
		trait = bad_priest_norse
		trait = bad_priest_tengri
		trait = bad_priest_zoroastrian
		trait = bad_priest_aztec
	}
}

has_fair_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
	}
}

has_ugly_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
	}
}

parent_for_elective_succession_trigger = {
	NOT = { character = ROOT } #Not the current ruler.
	OR = {
		any_claim = { title = ROOT_FROMFROM }
		AND = { 
			is_close_relative = ROOT
			OR = { 
				dynasty = ROOT
				AND = { is_landed = yes higher_real_tier_than = BARON }
			}
		}
		AND = { 
			higher_real_tier_than = COUNT
			OR = { #Either defacto direct vassal, or independent ruler who is dejure vassal.
				vassal_of = ROOT 
				AND = { 
			 		any_dejure_liege = { title = ROOT } 
					independent = yes
				}
			}
		}
	}
	AND = {
		OR = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
			AND = {
				is_ruler = yes
				is_landed = yes
				is_republic = no
				is_merchant_republic = no
				is_theocracy = no
			}
			NOR = {
				any_heir_title = {
					is_republic = yes
				}
				any_heir_title = {
					is_merchant_republic = yes
				}
				any_heir_title = {
					is_theocracy = yes
				}
			}
		}
		OR = { #If the title controls the religion, candidates must be of the same religion.
			ROOT = { 
				NOT = { 
					controls_religion = yes
				}
			}
			ROOT = { 
				religion = PREV
			}
		}
		NOR = {
			trait = cat
			trait = disinherited
			trait = horse
			trait = eunuch
			trait = bastard
			is_ascetic_trigger = yes
			is_theocracy = yes
			is_republic = yes
			is_merchant_republic = yes
		}
	}
}

has_any_leadership_trait_trigger = {
	OR = {
		trait = aggressive_leader
		trait = narrow_flank_leader
		trait = cavalry_leader
		trait = defensive_leader
		trait = desert_terrain_leader
		trait = experimenter
		trait = flanker
		trait = flat_terrain_leader
		trait = heavy_infantry_leader
		trait = holy_warrior
		trait = inspiring_leader
		trait = jungle_terrain_leader
		trait = light_foot_leader
		trait = mountain_terrain_leader
		trait = organizer
		trait = rough_terrain_leader
		trait = siege_leader
		trait = trickster
		trait = unyielding_leader
		trait = logistics_expert
		trait = master_of_flame
		trait = sapper
		trait = levy_coordinator
		trait = war_elephant_leader
		trait = winter_soldier
	}
}

has_any_astrology_trait_trigger = {
	OR = {
		trait = zodiac_aquarius
		trait = zodiac_aries
		trait = zodiac_cancer
		trait = zodiac_capricorn
		trait = zodiac_gemini
		trait = zodiac_leo
		trait = zodiac_libra
		trait = zodiac_pisces
		trait = zodiac_sagittarius
		trait = zodiac_scorpio
		trait = zodiac_taurus
		trait = zodiac_virgo
	}
}

reconquista_check_trigger = {
	any_war = {
		OR = {
			using_cb = reconquista_na
			using_cb = reconquista_istanbul
			using_cb = reconquista_west_anatolia
			using_cb = reconquista_south_anatolia
			using_cb = reconquista_wc_anatolia
			using_cb = reconquista_ec_anatolia
			using_cb = reconquista_anatolian_heartland
			using_cb = reconquista_trebizond
			using_cb = reconquista_west_armenia
			using_cb = reconquista_east_armenia
			using_cb = reconquista_west_georgia
			using_cb = reconquista_east_georgia
			using_cb = reconquista_azerbaijan
		}
	}
}

not_reconquista_check_trigger = {
	NOT = {
		any_war = {
			OR = {
				using_cb = reconquista_na
				using_cb = reconquista_istanbul
				using_cb = reconquista_west_anatolia
				using_cb = reconquista_south_anatolia
				using_cb = reconquista_wc_anatolia
				using_cb = reconquista_ec_anatolia
				using_cb = reconquista_anatolian_heartland
				using_cb = reconquista_trebizond
				using_cb = reconquista_west_armenia
				using_cb = reconquista_east_armenia
				using_cb = reconquista_west_georgia
				using_cb = reconquista_east_georgia
				using_cb = reconquista_azerbaijan
			}
		}
	}
}


this_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = THIS modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = THIS modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = THIS modifier = attempted_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = THIS modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_father }
		has_opinion_modifier = { who = THIS modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_castrated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_blinded_me }
		has_opinion_modifier = { who = THIS modifier = opinion_witch }
		has_opinion_modifier = { who = THIS modifier = opinion_takfir }
		has_opinion_modifier = { who = THIS modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = THIS modifier = opinion_cuckolded }
		has_opinion_modifier = { who = THIS modifier = opinion_charge_dw }
		has_opinion_modifier = { who = THIS modifier = opinion_tortured_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = THIS modifier = opinion_accused_apostate }
	}
}

root_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

root_has_imprisonment_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_dishonorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_fatwa_target }
		has_opinion_modifier = { who = ROOT modifier = opinion_refused_order }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_lover }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_heresiarch }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_infidel }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_deviant }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_illegitimate }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_cultist }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_trumped_up_charges }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_slanderer }
		has_opinion_modifier = { who = ROOT modifier = abuse_of_office }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_thief }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

region_africa_west_central_or_east_trigger = {
	OR = {
		region = world_africa_west
		region = world_africa_east
		region = world_africa_central
		region = world_india
		region = world_southern_himalayas
		region = world_zhujiang
		region = world_minyue
		region = world_southeast_asia
		region = world_taiwan
		region = world_ryukyu
	}
}

have_duplicate_goldsmith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = christian 
		       	religion_group = jewish_group
			}
			AND = 
			{
		       	has_artifact = the_lily_crown
       			has_artifact = noble_scepter
        		has_artifact = engraved_sword
		  	}
		}
		AND = {
	        OR = {
	        	religion_group = muslim 
	        	religion = west_african_pagan
	        	religion = west_african_pagan_reformed
	        }
	        AND = {
		        has_artifact = engraved_dagger
        		has_artifact = silver_bracelets
		    }
		}
        AND = {
	        OR = {
	        	religion_group = indian_group
	        	religion = bon
	        	religion = bon_reformed
	        }
        	AND = {
        		has_artifact = engraved_dagger
        		has_artifact = collar_of_pearls
        	}
        }
        AND = {
	        OR = {
	        	religion_group = zoroastrian_group
	        	religion = zun_pagan
	        	religion = zun_pagan_reformed
			}
			AND = {
			    has_artifact = circlet_of_twilight
        		has_artifact = silver_staff
        	}
        }
       	AND = {
	        OR = {
	        	religion = norse_pagan
	        	religion = norse_pagan_reformed
	        }
		    AND = {
		        has_artifact = iron_crown
      		    has_artifact = engraved_sword
        	}
        }
        AND = {
        	has_artifact = engraved_crown
        	has_artifact = ceremonial_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = christian 
		       	religion_group = jewish_group
			}
			AND = 
			{
		       	has_artifact = crown_of_pearls
        		has_artifact = ruby_scepter
        		has_artifact = golden_sword
		  	}
		}
		AND = {
	        religion_group = muslim 
	        AND = {
		        has_artifact = bejeweled_dagger
        		has_artifact = golden_bracelets
		    }
		}
        AND = {
	        OR = {
	        	religion_group = indian_group
	        	religion = bon
	        	religion = bon_reformed
	        }
        	AND = {
        		has_artifact = bejeweled_dagger
        		has_artifact = necklace_of_radiance
        	}
        }
        AND = {
	        OR = {
	        	religion_group = zoroastrian_group
			}
			AND = {
			    has_artifact = circlet_of_the_heavens
        		has_artifact = golden_staff
        	}
        }
       	AND = {
		    AND = {
		        has_artifact = crown_of_the_sea
        		has_artifact = golden_sword
        	}
        }
        AND = {
        	has_artifact = amber_crown
        	has_artifact = obsidian_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_expensive_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = christian 
		       	religion_group = jewish_group
			}
			AND = 
			{
		       	has_artifact = crown_of_majesty
		     	has_artifact = emerald_scepter
		    	has_artifact = sword_of_heroes
		  	}
		}
		AND = {
	        religion_group = muslim 
	        AND = {
		        has_artifact = dagger_of_glory
		        has_artifact = ruby_bracelets
		    }
		}
        AND = {
	        OR = {
	        	religion_group = indian_group
	        	religion = bon
	        	religion = bon_reformed
	        }
        	AND = {
        		has_artifact = dagger_of_glory
        		has_artifact = celestial_necklace
        	}
        }
        AND = {
	        religion_group = zoroastrian_group
			AND = {
			    has_artifact = circlet_of_the_heavens
			    has_artifact = staff_of_majesty
        	}
        }
       	AND = {
		    AND = {
		        has_artifact = crown_of_crows
		        has_artifact = sword_of_heroes
        	}
        }
        AND = {
        	has_artifact = heros_crown
        	has_artifact = axe_of_the_ancestors
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_amazing_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = christian 
		       	religion_group = jewish_group
			}
			AND = 
			{
		       	has_artifact = crown_of_majesty_2
		     	has_artifact = emerald_scepter_2
		    	has_artifact = sword_of_heroes_2
		  	}
		}
		AND = {
	        religion_group = muslim 
	        AND = {
		        has_artifact = dagger_of_glory_2
		        has_artifact = ruby_bracelets_2
		    }
		}
        AND = {
	        OR = {
	        	religion_group = indian_group
	        	religion = bon
	        	religion = bon_reformed
	        }
        	AND = {
        		has_artifact = dagger_of_glory_2
        		has_artifact = celestial_necklace_2
        	}
        }
        AND = {
	        religion_group = zoroastrian_group
			AND = {
			    has_artifact = circlet_of_the_heavens_2
			    has_artifact = staff_of_majesty_2
        	}
        }
       	AND = {
		    AND = {
		        has_artifact = crown_of_crows_2
		        has_artifact = sword_of_heroes_2
        	}
        }
        AND = {
        	has_artifact = heros_crown_2
        	has_artifact = axe_of_the_ancestors_2
       	}
    }
}

have_all_armorsmith_artifacts_all_flags_trigger = {
	has_artifact = armor_tier_4_guardian
	has_artifact = armor_tier_4_champion
	has_artifact = armor_tier_4_warden
	has_artifact = armor_tier_3_guardian
	has_artifact = armor_tier_3_champion
	has_artifact = armor_tier_3_warden
	has_artifact = armor_tier_2
	has_artifact = armor_tier_1
}

have_all_weaponsmith_artifacts_all_flags_trigger = {
	trigger_if = {
		limit = {
			NOR = { 
				religion_group = muslim 
				has_dharmic_religion_trigger = yes 
			}
		}
		have_all_weaponsmith_swords_all_flags_trigger = yes
	}
	trigger_if = {
		limit = {
			OR = { 
				religion_group = muslim 
				has_dharmic_religion_trigger = yes 
			}
		}
		have_all_weaponsmith_scimitar_all_flags_trigger = yes
	}
	trigger_if = {
		limit = { is_nomadic = yes }
		have_all_weaponsmith_bow_all_flags_trigger = yes
	}

	have_all_weaponsmith_lance_all_flags_trigger = yes
	have_all_weaponsmith_axe_all_flags_trigger = yes
	have_all_weaponsmith_mace_all_flags_trigger = yes
}

have_all_weaponsmith_mace_all_flags_trigger = {
	has_artifact = mace_tier_4_foe_hammer
	has_artifact = mace_tier_3_foe_hammer
    has_artifact = mace_tier_4_bone_breaker
    has_artifact = mace_tier_3_bone_breaker
    has_artifact = mace_tier_4_shatterer
    has_artifact = mace_tier_3_shatterer
    has_artifact = mace_tier_2_new
    has_artifact = mace_tier_1_new
}

have_all_weaponsmith_axe_all_flags_trigger = {
	has_artifact = axe_tier_4_cleaver
	has_artifact = axe_tier_3_cleaver
	has_artifact = axe_tier_4_ravager
	has_artifact = axe_tier_3_ravager
	has_artifact = axe_tier_4_marauder
	has_artifact = axe_tier_3_marauder
	has_artifact = axe_tier_2_new
    has_artifact = axe_tier_1_new
}

have_all_weaponsmith_lance_all_flags_trigger = {
	has_artifact = lance_tier_4_impaler
	has_artifact = lance_tier_3_impaler
	has_artifact = lance_tier_4_trident
	has_artifact = lance_tier_3_trident
	has_artifact = lance_tier_4_piercer
	has_artifact = lance_tier_3_piercer
	has_artifact = lance_tier_2_new
    has_artifact = lance_tier_1_new
}

have_all_weaponsmith_swords_all_flags_trigger = {
	has_artifact = sword_tier_4_heartseeker
	has_artifact = sword_tier_3_heartseeker
	has_artifact = sword_tier_4_vengeance
    has_artifact = sword_tier_3_vengeance
    has_artifact = sword_tier_4_fury
    has_artifact = sword_tier_3_fury
    has_artifact = sword_tier_2_new
    has_artifact = sword_tier_1_new
}

have_all_weaponsmith_scimitar_all_flags_trigger = {
	has_artifact = scimitar_tier_4_golden
	has_artifact = scimitar_tier_3_golden
	has_artifact = scimitar_tier_4_fortune
	has_artifact = scimitar_tier_3_fortune
	has_artifact = scimitar_tier_4_conquest
	has_artifact = scimitar_tier_3_conquest
	has_artifact = scimitar_tier_2_new
    has_artifact = scimitar_tier_1_new
}

have_all_weaponsmith_bow_all_flags_trigger = {
	has_artifact = bow_tier_4_silent_wind
	has_artifact = bow_tier_3_silent_wind
	has_artifact = bow_tier_4_lightning
	has_artifact = bow_tier_3_lightning
	has_artifact = bow_tier_4_eagle
	has_artifact = bow_tier_3_eagle
	has_artifact = bow_tier_2_new
	has_artifact = bow_tier_1_new
}

have_duplicate_smith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_1_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_1_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_1_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_1_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_1_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_1_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_1
       	}
    }
}

have_duplicate_smith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_2_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_2_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_2_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_2_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_2_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_2_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_2
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_warden
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_warden
       	}
    }
}

is_accepting_of_homosexuality_trigger = {
	hidden_tooltip = {
		OR = {
			religion = thelemic
			religion = thelemic_reformed
			religion = theosophy
			religion = lutheran
			religion = vagarna
			religion = katerinist
			religion = orleanist
			religion = summer_queen
			religion = orange_king
			trait = maaravi_reform
			trait = koranist_progressive
			trait = jew_liberal
			is_alien_religion_trigger = yes
			has_character_flag = overridemarriage
			has_religion_feature = religion_equal
		}
	}
}
this_has_terrible_opinion_modifier_of_prev_extended_trigger = {
    OR = {
        #Personal grievances.

        has_opinion_modifier = { who = PREV modifier = opinion_hate }
        has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
        has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
        has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
        has_opinion_modifier = { who = PREV modifier = attempted_murder }

        #Family grievances
        has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
        has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
        has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
        has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
        has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

        has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
        has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
        has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
        has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
    }
}
prev_has_terrible_opinion_modifier_of_this_extended_trigger = {
    OR = {
        #Personal grievances.

        reverse_has_opinion_modifier = { who = PREV modifier = opinion_hate }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
        reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }

        #Family grievances
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
        reverse_has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

        reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
        reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
        reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
        reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
    }
}

higher_society_rank_than_root_trigger = {
    OR = {
        AND = {
            ROOT = { society_rank == 1 }
            society_rank > 1
        }
        AND = {
            ROOT = { society_rank == 2 }
            society_rank > 2
        }
        AND = {
            ROOT = { society_rank == 3 }
            society_rank > 3
        }
    }
}

can_still_be_commander_byzantine_trigger = { 
	NOT = { 
		primary_title = { temporary = yes } 
	}
	liege = { 
		character = FROMFROM 
		has_law = succ_byzantine_elective
	}
	OR = {
		AND = {
			OR = {
				male_can_hold_minor_title_trigger = yes
				female_can_hold_minor_commander_title_trigger = yes
			}
			OR = {
				NOR = {
					religion = old_hindu
					religion = parabrahmanist
					religion = kalikula
					religion = shaivasiddhanta
					religion = jain
					religion = maunaxite_reformed
					religion = maunaxite
					religion = agamatirta
					religion = yazidi
					religion = yersenism
					religion = mandaeanism
					religion = ahlehaqq
				}
				OR = {
					trait = kshatriya
					trait = shaykh
				}
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}
	
	prisoner = no
	NOT = { trait = incapable }
 	NOT = { trait = sick_incapable }
	NOT = { is_inaccessible_trigger = yes }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = refusing_to_lead }
	NOR = { 
		war_with = FROMFROM
		any_liege = {  
			war_with = FROMFROM
		}
	}
	OR = { 
		higher_real_tier_than = BARON #Either potential commander is vassal...
		NOT = { #...Or there are no valid vassal candidates that can be commanders.
			custom_tooltip = { 
				text = tooltip_byzantine_empire_can_appoint_commanders
				liege = { 
					any_vassal = { 
						higher_real_tier_than = BARON
						NOT = { 
							primary_title = { temporary = yes } 
						}
						OR = {
							AND = {
								OR = {
									male_can_hold_minor_title_trigger = yes
									female_can_hold_minor_commander_title_trigger = yes
								}
								OR = {
									NOR = {
										religion = old_hindu
										religion = parabrahmanist
										religion = kalikula
										religion = shaivasiddhanta
										religion = jain
										religion = maunaxite_reformed
										religion = maunaxite
										religion = agamatirta
										religion = yazidi
										religion = yersenism
										religion = mandaeanism
										religion = ahlehaqq
									}
									OR = {
										trait = kshatriya
										trait = shaykh
									}
								is_adult = yes
								}
							}
							has_character_flag = special_marshal
						}
						
						prisoner = no
						NOT = { trait = incapable }
						NOT = { is_inaccessible_trigger = yes }
						NOT = { has_character_flag = guru }
						NOT = { has_character_modifier = refusing_to_lead }
						NOR = {
							has_job_title = job_chancellor
							has_job_title = job_marshal
							has_job_title = job_treasurer
							has_job_title = job_spymaster
							has_job_title = job_spiritual
							has_minor_title = title_commander
						}
					} 
				} 
			} 
		}
	}
}

can_still_be_marshal_byzantine_trigger = {
	liege = { 
		character = FROMFROM
		has_law = succ_byzantine_elective
	}
	NOR = { 
		war_with = FROMFROM
		any_liege = {  
			war_with = FROMFROM
		}
	}
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no 
					NOT = { liege = { has_religion_feature = religion_matriarchal } } 
				}
				AND = {
					is_female = yes 
					OR = { 
						liege = { has_religion_feature = religion_matriarchal } 
						liege = { has_religion_feature = religion_equal } 
						liege = { has_religion_feature = religion_feature_bon } 
					} 
				}
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						
					}
				}
				OR = {
					AND = { 
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } } 
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			OR = {
				NOR = {
					religion = old_hindu
					religion = parabrahmanist
					religion = kalikula
					religion = shaivasiddhanta
					religion = jain
					religion = maunaxite_reformed
					religion = maunaxite
					religion = agamatirta
					religion = yazidi
					religion = yersenism
					religion = mandaeanism
					religion = ahlehaqq
				}
				OR = {
					trait = kshatriya
					trait = shaykh
				}
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
 	NOT = { trait = sick_incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

is_single_player_observer_mode = {
	AND = {
		multiplayer = no
		is_local_human_observer = yes
	}
}

varangian_guard_events_default_trigger = {
	ai = yes
	age = 16
	is_incapable = no
	prisoner = no
	culture_group = byzantine
	has_character_flag = serving_varangian
}


ere_elective_politician_titles_trigger = { #Used in Imperial Elective to determine AI behavior.
	OR = {
		has_job_title = job_marshal
		has_job_title = job_spymaster
		has_job_title = job_treasurer
		has_job_title = job_chancellor
		has_minor_title = title_despot
		has_minor_title = title_sebastokrator
		has_minor_title = title_caesar
		has_minor_title = title_kouropalates
		has_minor_title = title_anthypatos
	} 
}
