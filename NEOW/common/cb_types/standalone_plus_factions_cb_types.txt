emf_faction_gender_succ_agnatic = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_GENDER_SUCC_AGNATIC
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = agnatic_succession }
		is_law_potential = agnatic_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = agnatic_succession }
		is_law_potential = agnatic_succession
	}

	on_add = {
		log = "CB(emf_faction_gender_succ_agnatic): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_gender_succ_agnatic): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = agnatic_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}
	on_fail = {
		log = "CB(emf_faction_gender_succ_agnatic): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_gender_succ_agnatic): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_gender_succ_agnatic): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_gender_succ_cognatic = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_GENDER_SUCC_COGNATIC
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = cognatic_succession }
		is_law_potential = cognatic_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = cognatic_succession }
		is_law_potential = cognatic_succession
	}

	on_add = {
		log = "CB(emf_faction_gender_succ_cognatic): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_gender_succ_cognatic): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = cognatic_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}
	on_fail = {
		log = "CB(emf_faction_gender_succ_cognatic): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_gender_succ_cognatic): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_gender_succ_cognatic): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_gender_succ_true_cognatic = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_GENDER_SUCC_TRUE_COGNATIC
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = true_cognatic_succession }
		is_law_potential = true_cognatic_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = true_cognatic_succession }
		is_law_potential = true_cognatic_succession
	}

	on_add = {
		log = "CB(emf_faction_gender_succ_true_cognatic): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_gender_succ_true_cognatic): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = true_cognatic_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}
	on_fail = {
		log = "CB(emf_faction_gender_succ_true_cognatic): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_gender_succ_true_cognatic): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_gender_succ_true_cognatic): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_gender_succ_enatic_cognatic = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_GENDER_SUCC_ENATIC_COGNATIC
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = enatic_cognatic_succession }
		is_law_potential = enatic_cognatic_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = enatic_cognatic_succession }
		is_law_potential = enatic_cognatic_succession
	}

	on_add = {
		log = "CB(emf_faction_gender_succ_enatic_cognatic): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_gender_succ_enatic_cognatic): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = enatic_cognatic_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_gender_succ_enatic_cognatic): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_gender_succ_enatic_cognatic): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_gender_succ_enatic_cognatic): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_gender_succ_enatic = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_GENDER_SUCC_ENATIC
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = enatic_succession }
		is_law_potential = enatic_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		succ_law_title = { title = PREV }
		NOT = { has_law = enatic_succession }
		is_law_potential = enatic_succession
	}

	on_add = {
		log = "CB(emf_faction_gender_succ_enatic): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_gender_succ_enatic): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = enatic_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_gender_succ_enatic): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_gender_succ_enatic): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_gender_succ_enatic): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_overthrow = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_OVERTHROW
	sprite = 12
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	on_add = {
		log = "CB(emf_faction_overthrow): START: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_overthrow): VICTORY: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
		emf_cb_faction_on_success_end = yes
	}

	on_success_posttitle = {
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_overthrow): WHITEPEACE: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_overthrow): DEFEAT: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_overthrow): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_overthrow_CA = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_OVERTHROW_CA
	sprite = 12
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
		FROM = {
			any_demesne_title = {
				higher_tier_than = DUKE
				crownlaw_title = { title = PREV }
				emf_laws_has_limited_ca_plus = yes
			}
		}
	}

	on_add = {
		log = "CB(emf_faction_overthrow_CA): START: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_overthrow_CA): VICTORY: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		FROM = { set_flag = emf_always_reduce_CA_tmp }
		emf_cb_faction_on_success_start = yes
		FROM = { clr_flag = emf_always_reduce_CA_tmp }
		emf_cb_faction_on_success_end = yes
	}

	on_success_posttitle = {
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_overthrow_CA): WHITEPEACE: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_overthrow_CA): DEFEAT: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_overthrow_CA): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_overthrow_obligations = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_OVERTHROW_OBLIGATIONS
	sprite = 12
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	on_add = {
		log = "CB(emf_faction_overthrow_obligations): START: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_overthrow_obligations): VICTORY: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
		emf_cb_faction_on_success_end = yes
	}

	on_success_posttitle = {
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_overthrow_obligations): WHITEPEACE: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_overthrow_obligations): DEFEAT: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_overthrow_obligations): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_overthrow_TO = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_OVERTHROW_TO
	sprite = 12
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	on_add = {
		log = "CB(emf_faction_overthrow_TO): START: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_overthrow_TO): VICTORY: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
		emf_cb_faction_on_success_end = yes
	}

	on_success_posttitle = {
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_overthrow_TO): WHITEPEACE: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_overthrow_TO): DEFEAT: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_overthrow_TO): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}


emf_faction_succ_byzantine_elective = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_BYZANTINE_ELECTIVE
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_byzantine_elective }
		is_law_potential = succ_byzantine_elective
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_byzantine_elective }
		is_law_potential = succ_byzantine_elective
	}

	on_add = {
		log = "CB(emf_faction_succ_byzantine_elective): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_byzantine_elective): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_byzantine_elective
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_byzantine_elective): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_byzantine_elective): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_byzantine_elective): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_eldership = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_ELDERSHIP
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_eldership }
		is_law_potential = succ_eldership
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_eldership }
		is_law_potential = succ_eldership
	}

	on_add = {
		log = "CB(emf_faction_succ_eldership): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_eldership): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_eldership
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_eldership): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_eldership): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_eldership): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_elective_gavelkind = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_ELECTIVE_GAVELKIND
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_elective_gavelkind }
		is_law_potential = succ_elective_gavelkind
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_elective_gavelkind }
		is_law_potential = succ_elective_gavelkind
	}

	on_add = {
		log = "CB(emf_faction_succ_elective_gavelkind): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_elective_gavelkind): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_elective_gavelkind
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}
	on_fail = {
		log = "CB(emf_faction_succ_elective_gavelkind): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_elective_gavelkind): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_elective_gavelkind): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_feudal_elective = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_FEUDAL_ELECTIVE
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_feudal_elective }
		is_law_potential = succ_feudal_elective
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_feudal_elective }
		is_law_potential = succ_feudal_elective
	}

	on_add = {
		log = "CB(emf_faction_succ_feudal_elective): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_feudal_elective): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_feudal_elective
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_feudal_elective): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_feudal_elective): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_feudal_elective): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_gavelkind = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_GAVELKIND
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_gavelkind }
		is_law_potential = succ_gavelkind
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_gavelkind }
		is_law_potential = succ_gavelkind
	}

	on_add = {
		log = "CB(emf_faction_succ_gavelkind): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_gavelkind): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_gavelkind
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_gavelkind): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_gavelkind): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_gavelkind): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_hre_elective = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_HRE_ELECTIVE
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_hre_elective }
		is_law_potential = succ_hre_elective
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_hre_elective }
		is_law_potential = succ_hre_elective
	}

	on_add = {
		log = "CB(emf_faction_succ_hre_elective): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_hre_elective): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_hre_elective
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_hre_elective): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_hre_elective): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_hre_elective): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_primogeniture = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_PRIMOGENITURE
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_primogeniture }
		is_law_potential = succ_primogeniture
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_primogeniture }
		is_law_potential = succ_primogeniture
	}

	on_add = {
		log = "CB(emf_faction_succ_primogeniture): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_primogeniture): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_primogeniture
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_primogeniture): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_primogeniture): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_primogeniture): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_seniority = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_SENIORITY
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_seniority }
		is_law_potential = succ_seniority
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_seniority }
		is_law_potential = succ_seniority
	}

	on_add = {
		log = "CB(emf_faction_succ_seniority): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_seniority): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_seniority
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_seniority): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_seniority): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_seniority): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_tanistry = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_TANISTRY
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_tanistry }
		is_law_potential = succ_tanistry
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_tanistry }
		is_law_potential = succ_tanistry
	}

	on_add = {
		log = "CB(emf_faction_succ_tanistry): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_tanistry): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_tanistry
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_tanistry): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_tanistry): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_tanistry): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_turkish_succession = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_TURKISH_SUCCESSION
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_turkish_succession }
		is_law_potential = succ_turkish_succession
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_turkish_succession }
		is_law_potential = succ_turkish_succession
	}

	on_add = {
		log = "CB(emf_faction_succ_turkish_succession): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_turkish_succession): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_turkish_succession
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_turkish_succession): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_turkish_succession): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_turkish_succession): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

emf_faction_succ_ultimogeniture = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_EMF_FACTION_SUCC_ULTIMOGENITURE
	sprite = 6
	truce_days = 1825
	major_revolt = yes
	capturing_attacker_is_complete_victory = no
	attacker_can_call_allies = no
	defender_can_call_allies = no
	can_ask_to_join_war = no

	can_use = {
		emf_cb_faction_can_use = yes
	}

	can_use_title = {
		holder = FROM
		NOT = { has_law = succ_ultimogeniture }
		is_law_potential = succ_ultimogeniture
	}

	is_valid = {
		emf_cb_faction_is_valid = yes
	}

	is_valid_title = {
		holder = FROM
		NOT = { has_law = succ_ultimogeniture }
		is_law_potential = succ_ultimogeniture
	}

	on_add = {
		log = "CB(emf_faction_succ_ultimogeniture): START: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_on_add = yes
		emf_cb_faction_on_add = yes
	}

	on_success = {
		log = "CB(emf_faction_succ_ultimogeniture): VICTORY: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_success_start = yes
	}

	on_success_title = {
		holder_scope = {
			set_flag = emf_no_law_penalties
		}
		add_law_w_cooldown = succ_ultimogeniture
		holder_scope = {
			clr_flag = emf_no_law_penalties
			recalc_succession = yes
		}
	}

	on_success_posttitle = {
		emf_cb_faction_on_success_end = yes
		emf_cb_on_success_posttitle = yes
	}

	on_fail = {
		log = "CB(emf_faction_succ_ultimogeniture): WHITEPEACE: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_fail = yes
	}

	on_reverse_demand = {
		log = "CB(emf_faction_succ_ultimogeniture): DEFEAT: title=[FromFrom.GetID]: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_reverse_demand = yes
	}

	on_invalidation = {
		log = "CB(emf_faction_succ_ultimogeniture): INVALIDATED: [Root.EMF_GetDebugName] vs. [From.EMF_GetDebugName]"
		emf_cb_faction_on_invalidation = yes
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
