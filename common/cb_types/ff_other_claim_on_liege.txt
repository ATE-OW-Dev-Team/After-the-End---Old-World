# CREDIT: This is pretty much a copy of part of 00_cb_types.txt from the base game.
# LAST MERGED FROM VERSION: 2.5.2

# Override other_claim_on_liege CB in a way that lets us extract ROOT (the claimant)
# The only change is the addition of an "on_invalidation" block that sets up opinion_ff_intended_claimant,
# which the other scripts can use to learn who the claimant was.

# This is convoluted but, I didn't see another way to get from war scope to claimant scope!
# The "supported_claimant" scope only works until the first attacker leader dies, and "faction_claimant" scope I have no idea.

other_claim_on_liege = {
    name = CB_NAME_CLAIM
    war_name = WAR_NAME_OTHER_CLAIM
    sprite = 4
    truce_days = 3650
    hostile_against_others = yes
    can_ask_to_join_war = no

    press_claim = yes
    can_call_vassals = no
#   attacker_can_call_allies = no
    major_revolt = yes

    allowed_to_target_tributaries = no
    allowed_to_target_suzerains = no

    infamy_modifier = 0.5

    can_use_title = {
        OR = {
            ROOT = { is_female = no }
            NOT = { has_law = agnatic_succession }
            AND = {
                lower_tier_than = KING
                is_primary_holder_title = no
            }
            FROMFROM = { has_character_flag = faction_claimant_ultimatum_taken } # Faction war. Ignore claim strength.
        }

        FROM = {
            has_landed_title = PREV
        }

        OR = {
            ROOT = { has_strong_claim = PREV }
            FROMFROM = { has_character_flag = faction_claimant_ultimatum_taken } # Faction war. Ignore claim strength.
            AND = {
                ROOT = { has_weak_claim = PREV }
                OR = {
                    is_pretender = yes # Checks vs ROOT character
                    holder_scope = { has_regent = yes }
                    AND = {
                        ROOT = { is_female = no }
                        holder_scope ={ is_female = yes }
                    }
                    is_contested = yes # Is already being contested in some form of Claim or Succession War
                }
            }
        }
        is_vice_royalty = no
    }

    is_valid = {
        FROM = {
            in_revolt = no
            liege_before_war = {
                in_revolt = no
                liege_before_war = {
                    in_revolt = no
                }
            }
        }
        OR = {
            liege = {
                character = PREV # either independent
            }
            liege = {
                FROM = {
                    is_liege_or_above = PREV # or have shared liege
                }
            }
        }
    }

    is_valid_title = {
        NOT = {
            holder_scope = {
                character = ROOT
            }
        }

        OR = {
            FROM = {
                has_landed_title = PREV
            }
            holder_scope = {
                is_liege_or_above = FROM
            }
        }

        OR = {
            has_law = succ_feudal_elective
            ROOT = { has_claim = PREV }
        }

        NOT = {
            any_war = { # when used in title scope, checks all wars for that title
                attacker = {
                    character = ROOT
                }
            }
        }
    }

    on_success = {
        any_attacker = {
            limit = {
                OR = {
                    character = ROOT
                    character = PREV
                }
            }
            participation_scaled_prestige = 100
            hidden_tooltip = {  disband_event_forces = faction_revolters }
        }
        any_attacker = {
            limit = {
                NOT = { character = ROOT }
                NOT = { character = PREV }
            }
            hidden_tooltip = {
                participation_scaled_prestige = 100
                disband_event_forces = faction_revolters
            }
        }
        ROOT = {
            opinion = {
                modifier = pressed_my_claim
                who = PREV
            }
        }

        FROM = {
            hidden_tooltip = { disband_event_forces = faction_loyalists }

            if = {
                limit = { NOT = { has_dlc = "Zeus" } }
                any_demesne_title = { # All titles
                    limit = {
                        OR = {
                            tier = king
                            tier = emperor
                        }
    #                   is_titular = no
                        NOT = { has_law = crown_authority_0 }
                    }
                    if = {
                        limit = { has_law = crown_authority_1 }
                        add_law = crown_authority_0
                    }
                    if = {
                        limit = { has_law = crown_authority_2 }
                        add_law = crown_authority_1
                    }
                    if = {
                        limit = { has_law = crown_authority_3 }
                        add_law = crown_authority_2
                    }
                    if = {
                        limit = { has_law = crown_authority_4 }
                        add_law = crown_authority_3
                    }
                }
            }
        }

        if = {
            limit = {
                ROOT = {
                    prisoner = yes
                    host = { character = FROM  }
                }
            }
            ROOT = { prisoner = no }
        }
    }

    on_success_title = {
        if = {
            limit = {
                is_primary_holder_title = yes
            }
            hidden_tooltip = {
                FROM = { set_character_flag = temp_other_claim_on_liege_prison }
            }
        }

        hidden_tooltip = {
            ROOT = {
                if = {
                    limit = {
                        has_nickname = no
                        lower_tier_than = PREV
                    }
                    random = {
                        chance = 50
                        give_nickname = nick_the_usurper
                    }
                }
            }
        }

        # If the claimant has the wrong government type, take care of that first.
        if = {
            limit = {
                higher_tier_than = ROOT
                holder_scope = {
                    is_feudal = yes
                }
                ROOT = {
                    is_ruler = yes
                    OR = {
                        is_theocracy = yes
                        is_republic = yes
                    }
                }
            }
            ROOT = { abdicate = yes }
        }

        usurp_title_plus_barony_if_unlanded_and_vassals_no_adj = { target = ROOT type = claim }

        if = {
            limit = {
                higher_tier_than = BARON
                NOT = { culture = ROOT }
            }
            hidden_tooltip = { conquest_culture = ROOT }
        }
    }

    on_success_posttitle = {
        hidden_tooltip = {
            if = {
                limit = {
                    top_liege = {
                        ROOT = {
                            NOT = {
                                top_liege = {
                                    character = PREVPREV
                                }
                            }
                        }
                    }
                }

                ROOT = {
                    set_defacto_liege = PREV
                }
            }

            if = {
                limit = {
                    top_liege = {
                        ROOT = {
                            NOT = {
                                top_liege = {
                                    character = PREVPREV
                                }
                            }
                        }
                    }
                }

                ROOT = {
                    set_defacto_liege = ROOT
                }
            }

            if = {
                limit = {
                    FROM = {
                        has_character_flag = temp_other_claim_on_liege_prison
                        lower_tier_than = PREV
                    }
                }
                FROM = {
                    imprison = ROOT
                }
            }
            FROM = { clr_character_flag = temp_other_claim_on_liege_prison }
        }
    }

    on_invalidation = {
        attacker = {
            opinion = { who = ROOT  modifier = opinion_ff_intended_claimant }
        }
    }

    on_fail = {
        prestige = -100

        imprison = FROM
        #if = { #Issue CKTWO-233
        #   limit = {
        #       OR = {
        #           is_liege_of = ROOT
        #           ROOT = { is_liege_or_above = FROM }
        #       }
        #   }
        #   ROOT = {
        #       imprison = FROM
        #   }
        #}

        any_defender = {
            limit = { character = FROM }
            participation_scaled_prestige = 50
        }
        any_defender = {
            limit = { NOT = { character = FROM } }
            hidden_tooltip = { participation_scaled_prestige = 50 }
        }

        hidden_tooltip = {
            any_attacker = {
                disband_event_forces = faction_revolters
            }
        }

        FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
    }

    on_reverse_demand = {
        prestige = -200

        imprison = FROM
        #if = { #Issue CKTWO-233
        #   limit = {
        #       OR = {
        #           is_liege_of = ROOT
        #           ROOT = { is_liege_or_above = FROM }
        #       }
        #   }
        #   ROOT = {
        #       imprison = FROM
        #   }
        #}

        any_defender = {
            limit = { character = FROM }
            participation_scaled_prestige = 100
        }
        any_defender = {
            limit = { NOT = { character = FROM } }
            hidden_tooltip = { participation_scaled_prestige = 100 }
        }

        hidden_tooltip = {
            any_attacker = {
                limit = { liege = { character = FROM } }
                disband_event_forces = faction_revolters
                prisoner = FROM
            }
        }

        FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
    }

    attacker_ai_victory_worth = {
        factor = -1 # always accept
    }

    attacker_ai_defeat_worth = {
        factor = 100
    }

    defender_ai_victory_worth = {
        factor = -1 # always accept
    }

    defender_ai_defeat_worth = {
        factor = 100
    }
}
