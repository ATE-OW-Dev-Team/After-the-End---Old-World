This file documents the event system. However, it only focuses on new functionality rather than attempting to also document pre-existing functionality.


== Persistent event targets ==
Patch 2.9 added so-called persistent event targets.
These work like event targets, but have one major difference: they're stored in an object rather than in the event chain itself, meaning they persist past the end of the event chain.

The syntax is as follows:

# Saving
save_persistent_event_target = {
	name = name_of_target               # What to name the persistent event target
	scope = event_target:my_character	# The scope being saved. It'll be saved in whatever the current scope is scoped to, assuming it supports persistent event targets. Relative scoping like ROOT, liege, and similar work as well.
	                                    # Note that it is saved *to* the current scope rather than the current scope being saved to the provided target
}

# Clearing
clear_persistent_event_target = name_of_target # Removes the given target

# Scoping to persistent event targets
persistent_event_target:name_of_target = { }   # Scopes to the given target

# Using persistent event targets in localisation
[name_of_target.SomeLocCommand]                # Scopes to the given target in loc. In the case of collision with a regular event target, the non-persistent target takes precedence


Persistent event targets can be saved in the following types of objects:
* Characters
* Provinces
* Titles
* Artifacts
* Offmap powers
* Bloodlines

